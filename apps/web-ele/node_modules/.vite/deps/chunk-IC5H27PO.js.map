{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/src/token.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/src/option.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/src/useOption.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/src/option.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/src/select-dropdown.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/utils/easings.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/utils/dom/scroll.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/src/useSelect.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/src/options.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/src/select.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/src/select.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/src/option-group.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/select/index.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree/src/model/util.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree/src/model/node.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree/src/model/tree-store.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/collapse-transition/src/collapse-transition.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/collapse-transition/index.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/text/src/text.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/text/src/text.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/text/index.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree/src/tree-node-content.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree/src/model/useNodeExpandEventBroadcast.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree/src/model/useDragNode.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree/src/tree-node.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree/src/model/useKeydown.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree/src/tree.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree/index.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree-select/src/select.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree-select/src/tree-select-option.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree-select/src/utils.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree-select/src/tree.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree-select/src/cache-options.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree-select/src/tree-select.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tree-select/index.ts"],
  "sourcesContent": ["import type { InjectionKey } from 'vue'\nimport type { SelectContext, SelectGroupContext } from './type'\n\n// For individual build sharing injection key, we had to make `Symbol` to string\nexport const selectGroupKey: InjectionKey<SelectGroupContext> =\n  Symbol('ElSelectGroup')\n\nexport const selectKey: InjectionKey<SelectContext> = Symbol('ElSelect')\n", "import { buildProps } from '@element-plus/utils'\n\nexport const COMPONENT_NAME = 'ElOption'\nexport const optionProps = buildProps({\n  /**\n   * @description value of option\n   */\n  value: {\n    type: [String, Number, Boolean, Object],\n    required: true as const,\n  },\n  /**\n   * @description label of option, same as `value` if omitted\n   */\n  label: {\n    type: [String, Number],\n  },\n  created: Boolean,\n  /**\n   * @description whether option is disabled\n   */\n  disabled: Boolean,\n})\n", "import { computed, getCurrentInstance, inject, toRaw, watch } from 'vue'\nimport { get, isEqual } from 'lodash-unified'\nimport {\n  ensureArray,\n  escapeStringRegexp,\n  isObject,\n  throwError,\n} from '@element-plus/utils'\nimport { selectGroupKey, selectKey } from './token'\nimport { COMPONENT_NAME } from './option'\n\nimport type { OptionInternalInstance, OptionProps, OptionStates } from './type'\n\nexport function useOption(props: OptionProps, states: OptionStates) {\n  // inject\n  const select = inject(selectKey)\n  if (!select) {\n    throwError(COMPONENT_NAME, 'usage: <el-select><el-option /></el-select/>')\n  }\n  const selectGroup = inject(selectGroupKey, { disabled: false })\n\n  // computed\n  const itemSelected = computed(() => {\n    return contains(ensureArray(select.props.modelValue), props.value)\n  })\n\n  const limitReached = computed(() => {\n    if (select.props.multiple) {\n      const modelValue = ensureArray(select.props.modelValue ?? [])\n      return (\n        !itemSelected.value &&\n        modelValue.length >= select.props.multipleLimit &&\n        select.props.multipleLimit > 0\n      )\n    } else {\n      return false\n    }\n  })\n\n  const currentLabel = computed(() => {\n    return props.label || (isObject(props.value) ? '' : props.value)\n  })\n\n  const currentValue = computed(() => {\n    return props.value || props.label || ''\n  })\n\n  const isDisabled = computed(() => {\n    return props.disabled || states.groupDisabled || limitReached.value\n  })\n\n  const instance = getCurrentInstance()! as OptionInternalInstance\n  const contains = <T>(arr: T[] = [], target: T) => {\n    if (!isObject(props.value)) {\n      return arr && arr.includes(target)\n    } else {\n      const valueKey = select.props.valueKey\n      return (\n        arr &&\n        arr.some((item) => {\n          return toRaw(get(item, valueKey)) === get(target, valueKey)\n        })\n      )\n    }\n  }\n\n  const hoverItem = () => {\n    if (!props.disabled && !selectGroup.disabled) {\n      select.states.hoveringIndex = select.optionsArray.indexOf(instance.proxy)\n    }\n  }\n\n  const updateOption = (query: string) => {\n    const regexp = new RegExp(escapeStringRegexp(query), 'i')\n    states.visible = regexp.test(String(currentLabel.value)) || props.created\n  }\n\n  watch(\n    () => currentLabel.value,\n    () => {\n      if (!props.created && !select.props.remote) select.setSelected()\n    }\n  )\n\n  watch(\n    () => props.value,\n    (val, oldVal) => {\n      const { remote, valueKey } = select.props\n      const shouldUpdate = remote ? val !== oldVal : !isEqual(val, oldVal)\n      if (shouldUpdate) {\n        select.onOptionDestroy(oldVal, instance.proxy)\n        select.onOptionCreate(instance.proxy)\n      }\n\n      if (!props.created && !remote) {\n        if (\n          valueKey &&\n          isObject(val) &&\n          isObject(oldVal) &&\n          val[valueKey] === oldVal[valueKey]\n        ) {\n          return\n        }\n        select.setSelected()\n      }\n    }\n  )\n\n  watch(\n    () => selectGroup.disabled,\n    () => {\n      states.groupDisabled = selectGroup.disabled\n    },\n    { immediate: true }\n  )\n\n  return {\n    select,\n    currentLabel,\n    currentValue,\n    itemSelected,\n    isDisabled,\n    hoverItem,\n    updateOption,\n  }\n}\n", "<template>\n  <li\n    v-show=\"visible\"\n    :id=\"id\"\n    :class=\"containerKls\"\n    role=\"option\"\n    :aria-disabled=\"isDisabled || undefined\"\n    :aria-selected=\"itemSelected\"\n    @mousemove=\"hoverItem\"\n    @click.stop=\"selectOptionClick\"\n  >\n    <slot>\n      <span>{{ currentLabel }}</span>\n    </slot>\n  </li>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  nextTick,\n  onBeforeUnmount,\n  reactive,\n  toRefs,\n  unref,\n} from 'vue'\nimport { useId, useNamespace } from '@element-plus/hooks'\nimport { useOption } from './useOption'\nimport { COMPONENT_NAME, optionProps } from './option'\n\nimport type { OptionExposed, OptionInternalInstance, OptionStates } from './type'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n\n  props: optionProps,\n\n  setup(props) {\n    const ns = useNamespace('select')\n    const id = useId()\n\n    const containerKls = computed(() => [\n      ns.be('dropdown', 'item'),\n      ns.is('disabled', unref(isDisabled)),\n      ns.is('selected', unref(itemSelected)),\n      ns.is('hovering', unref(hover)),\n    ])\n\n    const states = reactive<OptionStates>({\n      index: -1,\n      groupDisabled: false,\n      visible: true,\n      hover: false,\n    })\n\n    const {\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      hoverItem,\n      updateOption,\n    } = useOption(props, states)\n\n    const { visible, hover } = toRefs(states)\n\n    const vm = (getCurrentInstance()! as OptionInternalInstance).proxy\n\n    select.onOptionCreate(vm)\n\n    onBeforeUnmount(() => {\n      const key = vm.value\n      const { selected: selectedOptions } = select.states\n      const doesSelected = selectedOptions.some((item) => {\n        return item.value === vm.value\n      })\n      // if option is not selected, remove it from cache\n      nextTick(() => {\n        if (select.states.cachedOptions.get(key) === vm && !doesSelected) {\n          select.states.cachedOptions.delete(key)\n        }\n      })\n      select.onOptionDestroy(key, vm)\n    })\n\n    function selectOptionClick() {\n      if (!isDisabled.value) {\n        select.handleOptionSelect(vm)\n      }\n    }\n\n    return {\n      ns,\n      id,\n      containerKls,\n      currentLabel,\n      itemSelected,\n      isDisabled,\n      select,\n      visible,\n      hover,\n      states,\n\n      hoverItem,\n      updateOption,\n      selectOptionClick,\n    } satisfies OptionExposed\n  },\n})\n</script>\n", "<template>\n  <div\n    :class=\"[ns.b('dropdown'), ns.is('multiple', isMultiple), popperClass]\"\n    :style=\"{ [isFitInputWidth ? 'width' : 'minWidth']: minWidth }\"\n  >\n    <div v-if=\"$slots.header\" :class=\"ns.be('dropdown', 'header')\">\n      <slot name=\"header\" />\n    </div>\n    <slot />\n    <div v-if=\"$slots.footer\" :class=\"ns.be('dropdown', 'footer')\">\n      <slot name=\"footer\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, onMounted, ref } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\nimport { useNamespace } from '@element-plus/hooks'\nimport { selectKey } from './token'\n\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n\n  componentName: 'ElSelectDropdown',\n\n  setup() {\n    const select = inject(selectKey)!\n    const ns = useNamespace('select')\n\n    // computed\n    const popperClass = computed(() => select.props.popperClass)\n    const isMultiple = computed(() => select.props.multiple)\n    const isFitInputWidth = computed(() => select.props.fitInputWidth)\n    const minWidth = ref('')\n\n    function updateMinWidth() {\n      minWidth.value = `${select.selectRef?.offsetWidth}px`\n    }\n\n    onMounted(() => {\n      // TODO: updatePopper\n      // popper.value.update()\n      updateMinWidth()\n      useResizeObserver(select.selectRef, updateMinWidth)\n    })\n\n    return {\n      ns,\n      minWidth,\n      popperClass,\n      isMultiple,\n      isFitInputWidth,\n    }\n  },\n})\n</script>\n", "export function easeInOutCubic(t: number, b: number, c: number, d: number) {\n  const cc = c - b\n  t /= d / 2\n  if (t < 1) {\n    return (cc / 2) * t * t * t + b\n  }\n  return (cc / 2) * ((t -= 2) * t * t + 2) + b\n}\n", "import { isClient } from '../browser'\nimport { easeInOutCubic } from '../easings'\nimport { isFunction, isWindow } from '../types'\nimport { cAF, rAF } from '../raf'\nimport { getStyle } from './style'\n\nexport const isScroll = (el: HTMLElement, isVertical?: boolean): boolean => {\n  if (!isClient) return false\n\n  const key = (\n    {\n      undefined: 'overflow',\n      true: 'overflow-y',\n      false: 'overflow-x',\n    } as const\n  )[String(isVertical)]!\n  const overflow = getStyle(el, key)\n  return ['scroll', 'auto', 'overlay'].some((s) => overflow.includes(s))\n}\n\nexport const getScrollContainer = (\n  el: HTMLElement,\n  isVertical?: boolean\n): Window | HTMLElement | undefined => {\n  if (!isClient) return\n\n  let parent: HTMLElement = el\n  while (parent) {\n    if ([window, document, document.documentElement].includes(parent))\n      return window\n\n    if (isScroll(parent, isVertical)) return parent\n\n    parent = parent.parentNode as HTMLElement\n  }\n\n  return parent\n}\n\nlet scrollBarWidth: number\nexport const getScrollBarWidth = (namespace: string): number => {\n  if (!isClient) return 0\n  if (scrollBarWidth !== undefined) return scrollBarWidth\n\n  const outer = document.createElement('div')\n  outer.className = `${namespace}-scrollbar__wrap`\n  outer.style.visibility = 'hidden'\n  outer.style.width = '100px'\n  outer.style.position = 'absolute'\n  outer.style.top = '-9999px'\n  document.body.appendChild(outer)\n\n  const widthNoScroll = outer.offsetWidth\n  outer.style.overflow = 'scroll'\n\n  const inner = document.createElement('div')\n  inner.style.width = '100%'\n  outer.appendChild(inner)\n\n  const widthWithScroll = inner.offsetWidth\n  outer.parentNode?.removeChild(outer)\n  scrollBarWidth = widthNoScroll - widthWithScroll\n\n  return scrollBarWidth\n}\n\n/**\n * Scroll with in the container element, positioning the **selected** element at the top\n * of the container\n */\nexport function scrollIntoView(\n  container: HTMLElement,\n  selected: HTMLElement\n): void {\n  if (!isClient) return\n\n  if (!selected) {\n    container.scrollTop = 0\n    return\n  }\n\n  const offsetParents: HTMLElement[] = []\n  let pointer = selected.offsetParent\n  while (\n    pointer !== null &&\n    container !== pointer &&\n    container.contains(pointer)\n  ) {\n    offsetParents.push(pointer as HTMLElement)\n    pointer = (pointer as HTMLElement).offsetParent\n  }\n  const top =\n    selected.offsetTop +\n    offsetParents.reduce((prev, curr) => prev + curr.offsetTop, 0)\n  const bottom = top + selected.offsetHeight\n  const viewRectTop = container.scrollTop\n  const viewRectBottom = viewRectTop + container.clientHeight\n\n  if (top < viewRectTop) {\n    container.scrollTop = top\n  } else if (bottom > viewRectBottom) {\n    container.scrollTop = bottom - container.clientHeight\n  }\n}\n\nexport function animateScrollTo(\n  container: HTMLElement | Window,\n  from: number,\n  to: number,\n  duration: number,\n  callback?: unknown\n) {\n  const startTime = Date.now()\n\n  let handle: number | undefined\n  const scroll = () => {\n    const timestamp = Date.now()\n    const time = timestamp - startTime\n    const nextScrollTop = easeInOutCubic(\n      time > duration ? duration : time,\n      from,\n      to,\n      duration\n    )\n\n    if (isWindow(container)) {\n      container.scrollTo(window.pageXOffset, nextScrollTop)\n    } else {\n      container.scrollTop = nextScrollTop\n    }\n    if (time < duration) {\n      handle = rAF(scroll)\n    } else if (isFunction(callback)) {\n      callback()\n    }\n  }\n\n  scroll()\n\n  return () => {\n    handle && cAF(handle)\n  }\n}\n\nexport const getScrollElement = (\n  target: HTMLElement,\n  container: HTMLElement | Window\n) => {\n  if (isWindow(container)) {\n    return target.ownerDocument.documentElement\n  }\n  return container\n}\n\nexport const getScrollTop = (container: HTMLElement | Window) => {\n  if (isWindow(container)) {\n    return window.scrollY\n  }\n  return container.scrollTop\n}\n", "import {\n  Component,\n  computed,\n  nextTick,\n  onMounted,\n  reactive,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport {\n  findLastIndex,\n  get,\n  isEqual,\n  debounce as lodashDebounce,\n} from 'lodash-unified'\nimport { useResizeObserver } from '@vueuse/core'\nimport {\n  ValidateComponentsMap,\n  debugWarn,\n  ensureArray,\n  isArray,\n  isClient,\n  isFunction,\n  isIOS,\n  isNumber,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  scrollIntoView,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport {\n  useComposition,\n  useEmptyValues,\n  useFocusController,\n  useId,\n  useLocale,\n  useNamespace,\n} from '@element-plus/hooks'\nimport {\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\n\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { ScrollbarInstance } from '@element-plus/components/scrollbar'\nimport type { ISelectProps, SelectEmits } from './select'\nimport type { OptionPublicInstance, OptionValue, SelectStates } from './type'\n\nexport const useSelect = (props: ISelectProps, emit: SelectEmits) => {\n  const { t } = useLocale()\n  const contentId = useId()\n  const nsSelect = useNamespace('select')\n  const nsInput = useNamespace('input')\n\n  const states = reactive<SelectStates>({\n    inputValue: '',\n    options: new Map(),\n    cachedOptions: new Map(),\n    optionValues: [], // sorted value of options\n    selected: [],\n    selectionWidth: 0,\n    collapseItemWidth: 0,\n    selectedLabel: '',\n    hoveringIndex: -1,\n    previousQuery: null,\n    inputHovering: false,\n    menuVisibleOnFocus: false,\n    isBeforeHide: false,\n  })\n\n  // template refs\n  const selectRef = ref<HTMLElement>()\n  const selectionRef = ref<HTMLElement>()\n  const tooltipRef = ref<TooltipInstance>()\n  const tagTooltipRef = ref<TooltipInstance>()\n  const inputRef = ref<HTMLInputElement>()\n  const prefixRef = ref<HTMLElement>()\n  const suffixRef = ref<HTMLElement>()\n  const menuRef = ref<HTMLElement>()\n  const tagMenuRef = ref<HTMLElement>()\n  const collapseItemRef = ref<HTMLElement>()\n  const scrollbarRef = ref<ScrollbarInstance>()\n\n  const {\n    isComposing,\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n  } = useComposition({\n    afterComposition: (e) => onInput(e),\n  })\n\n  const { wrapperRef, isFocused, handleBlur } = useFocusController(inputRef, {\n    beforeFocus() {\n      return selectDisabled.value\n    },\n    afterFocus() {\n      if (props.automaticDropdown && !expanded.value) {\n        expanded.value = true\n        states.menuVisibleOnFocus = true\n      }\n    },\n    beforeBlur(event) {\n      return (\n        tooltipRef.value?.isFocusInsideContent(event) ||\n        tagTooltipRef.value?.isFocusInsideContent(event)\n      )\n    },\n    afterBlur() {\n      expanded.value = false\n      states.menuVisibleOnFocus = false\n      if (props.validateEvent) {\n        formItem?.validate?.('blur').catch((err) => debugWarn(err))\n      }\n    },\n  })\n\n  // the controller of the expanded popup\n  const expanded = ref(false)\n  const hoverOption = ref()\n\n  const { form, formItem } = useFormItem()\n  const { inputId } = useFormItemInputId(props, {\n    formItemContext: formItem,\n  })\n  const { valueOnClear, isEmptyValue } = useEmptyValues(props)\n\n  const selectDisabled = computed(() => props.disabled || form?.disabled)\n\n  const hasModelValue = computed(() => {\n    return isArray(props.modelValue)\n      ? props.modelValue.length > 0\n      : !isEmptyValue(props.modelValue)\n  })\n\n  const needStatusIcon = computed(() => form?.statusIcon ?? false)\n\n  const showClose = computed(() => {\n    return (\n      props.clearable &&\n      !selectDisabled.value &&\n      states.inputHovering &&\n      hasModelValue.value\n    )\n  })\n  const iconComponent = computed(() =>\n    props.remote && props.filterable && !props.remoteShowSuffix\n      ? ''\n      : props.suffixIcon\n  )\n  const iconReverse = computed(() =>\n    nsSelect.is('reverse', !!(iconComponent.value && expanded.value))\n  )\n\n  const validateState = computed(() => formItem?.validateState || '')\n  const validateIcon = computed(\n    () =>\n      validateState.value &&\n      (ValidateComponentsMap[validateState.value] as Component)\n  )\n\n  const debounce = computed(() => (props.remote ? 300 : 0))\n\n  const isRemoteSearchEmpty = computed(\n    () => props.remote && !states.inputValue && states.options.size === 0\n  )\n\n  const emptyText = computed(() => {\n    if (props.loading) {\n      return props.loadingText || t('el.select.loading')\n    } else {\n      if (\n        props.filterable &&\n        states.inputValue &&\n        states.options.size > 0 &&\n        filteredOptionsCount.value === 0\n      ) {\n        return props.noMatchText || t('el.select.noMatch')\n      }\n      if (states.options.size === 0) {\n        return props.noDataText || t('el.select.noData')\n      }\n    }\n    return null\n  })\n\n  const filteredOptionsCount = computed(\n    () => optionsArray.value.filter((option) => option.visible).length\n  )\n\n  const optionsArray = computed(() => {\n    const list = Array.from(states.options.values())\n    const newList: OptionPublicInstance[] = []\n    states.optionValues.forEach((item) => {\n      const index = list.findIndex((i) => i.value === item)\n      if (index > -1) {\n        newList.push(list[index])\n      }\n    })\n    return newList.length >= list.length ? newList : list\n  })\n\n  const cachedOptionsArray = computed(() =>\n    Array.from(states.cachedOptions.values())\n  )\n\n  const showNewOption = computed(() => {\n    const hasExistingOption = optionsArray.value\n      .filter((option) => {\n        return !option.created\n      })\n      .some((option) => {\n        return option.currentLabel === states.inputValue\n      })\n    return (\n      props.filterable &&\n      props.allowCreate &&\n      states.inputValue !== '' &&\n      !hasExistingOption\n    )\n  })\n\n  const updateOptions = () => {\n    if (props.filterable && isFunction(props.filterMethod)) return\n    if (props.filterable && props.remote && isFunction(props.remoteMethod))\n      return\n    optionsArray.value.forEach((option) => {\n      option.updateOption?.(states.inputValue)\n    })\n  }\n\n  const selectSize = useFormSize()\n\n  const collapseTagSize = computed(() =>\n    ['small'].includes(selectSize.value) ? 'small' : 'default'\n  )\n\n  const dropdownMenuVisible = computed({\n    get() {\n      return expanded.value && !isRemoteSearchEmpty.value\n    },\n    set(val: boolean) {\n      expanded.value = val\n    },\n  })\n\n  const shouldShowPlaceholder = computed(() => {\n    if (props.multiple && !isUndefined(props.modelValue)) {\n      return ensureArray(props.modelValue).length === 0 && !states.inputValue\n    }\n    const value = isArray(props.modelValue)\n      ? props.modelValue[0]\n      : props.modelValue\n    return props.filterable || isUndefined(value) ? !states.inputValue : true\n  })\n\n  const currentPlaceholder = computed(() => {\n    const _placeholder = props.placeholder ?? t('el.select.placeholder')\n    return props.multiple || !hasModelValue.value\n      ? _placeholder\n      : states.selectedLabel\n  })\n\n  // iOS Safari does not handle click events when a mouseenter event is registered and a DOM-change happens in a child\n  // We use a Vue custom event binding to only register the event on non-iOS devices\n  // ref.: https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n  // Github Issue: https://github.com/vuejs/vue/issues/9859\n  const mouseEnterEventName = computed(() => (isIOS ? null : 'mouseenter'))\n\n  watch(\n    () => props.modelValue,\n    (val, oldVal) => {\n      if (props.multiple) {\n        if (props.filterable && !props.reserveKeyword) {\n          states.inputValue = ''\n          handleQueryChange('')\n        }\n      }\n      setSelected()\n      if (!isEqual(val, oldVal) && props.validateEvent) {\n        formItem?.validate('change').catch((err) => debugWarn(err))\n      }\n    },\n    {\n      flush: 'post',\n      deep: true,\n    }\n  )\n\n  watch(\n    () => expanded.value,\n    (val) => {\n      if (val) {\n        handleQueryChange(states.inputValue)\n      } else {\n        states.inputValue = ''\n        states.previousQuery = null\n        states.isBeforeHide = true\n      }\n      emit('visible-change', val)\n    }\n  )\n\n  watch(\n    // fix `Array.prototype.push/splice/..` cannot trigger non-deep watcher\n    // https://github.com/vuejs/vue-next/issues/2116\n    () => states.options.entries(),\n    () => {\n      if (!isClient) return\n      // tooltipRef.value?.updatePopper?.()\n      setSelected()\n      if (\n        props.defaultFirstOption &&\n        (props.filterable || props.remote) &&\n        filteredOptionsCount.value\n      ) {\n        checkDefaultFirstOption()\n      }\n    },\n    {\n      flush: 'post',\n    }\n  )\n\n  watch([() => states.hoveringIndex, optionsArray], ([val]) => {\n    if (isNumber(val) && val > -1) {\n      hoverOption.value = optionsArray.value[val] || {}\n    } else {\n      hoverOption.value = {}\n    }\n    optionsArray.value.forEach((option) => {\n      option.hover = hoverOption.value === option\n    })\n  })\n\n  watchEffect(() => {\n    // Anything could cause options changed, then update options\n    // If you want to control it by condition, write here\n    if (states.isBeforeHide) return\n    updateOptions()\n  })\n\n  const handleQueryChange = (val: string) => {\n    if (states.previousQuery === val || isComposing.value) {\n      return\n    }\n    states.previousQuery = val\n    if (props.filterable && isFunction(props.filterMethod)) {\n      props.filterMethod(val)\n    } else if (\n      props.filterable &&\n      props.remote &&\n      isFunction(props.remoteMethod)\n    ) {\n      props.remoteMethod(val)\n    }\n    if (\n      props.defaultFirstOption &&\n      (props.filterable || props.remote) &&\n      filteredOptionsCount.value\n    ) {\n      nextTick(checkDefaultFirstOption)\n    } else {\n      nextTick(updateHoveringIndex)\n    }\n  }\n\n  /**\n   * find and highlight first option as default selected\n   * @remark\n   * - if the first option in dropdown list is user-created,\n   *   it would be at the end of the optionsArray\n   *   so find it and set hover.\n   *   (NOTE: there must be only one user-created option in dropdown list with query)\n   * - if there's no user-created option in list, just find the first one as usual\n   *   (NOTE: exclude options that are disabled or in disabled-group)\n   */\n  const checkDefaultFirstOption = () => {\n    const optionsInDropdown = optionsArray.value.filter(\n      (n) => n.visible && !n.disabled && !n.states.groupDisabled\n    )\n    const userCreatedOption = optionsInDropdown.find((n) => n.created)\n    const firstOriginOption = optionsInDropdown[0]\n    const valueList = optionsArray.value.map((item) => item.value)\n    states.hoveringIndex = getValueIndex(\n      valueList,\n      userCreatedOption || firstOriginOption\n    )\n  }\n\n  const setSelected = () => {\n    if (!props.multiple) {\n      const value = isArray(props.modelValue)\n        ? props.modelValue[0]\n        : props.modelValue\n      const option = getOption(value)\n      states.selectedLabel = option.currentLabel\n      states.selected = [option]\n      return\n    } else {\n      states.selectedLabel = ''\n    }\n    const result: SelectStates['selected'] = []\n    if (!isUndefined(props.modelValue)) {\n      ensureArray(props.modelValue).forEach((value) => {\n        result.push(getOption(value))\n      })\n    }\n    states.selected = result\n  }\n\n  const getOption = (value: OptionValue) => {\n    let option\n    const isObjectValue = isPlainObject(value)\n\n    for (let i = states.cachedOptions.size - 1; i >= 0; i--) {\n      const cachedOption = cachedOptionsArray.value[i]\n      const isEqualValue = isObjectValue\n        ? get(cachedOption.value, props.valueKey) === get(value, props.valueKey)\n        : cachedOption.value === value\n      if (isEqualValue) {\n        option = {\n          value,\n          currentLabel: cachedOption.currentLabel,\n          get isDisabled() {\n            return cachedOption.isDisabled\n          },\n        }\n        break\n      }\n    }\n    if (option) return option\n    const label = isObjectValue ? value.label : value ?? ''\n    const newOption = {\n      value,\n      currentLabel: label,\n    }\n    return newOption\n  }\n\n  const updateHoveringIndex = () => {\n    states.hoveringIndex = optionsArray.value.findIndex((item) =>\n      states.selected.some(\n        (selected) => getValueKey(selected) === getValueKey(item)\n      )\n    )\n  }\n\n  const resetSelectionWidth = () => {\n    states.selectionWidth = selectionRef.value!.getBoundingClientRect().width\n  }\n\n  const resetCollapseItemWidth = () => {\n    states.collapseItemWidth =\n      collapseItemRef.value!.getBoundingClientRect().width\n  }\n\n  const updateTooltip = () => {\n    tooltipRef.value?.updatePopper?.()\n  }\n\n  const updateTagTooltip = () => {\n    tagTooltipRef.value?.updatePopper?.()\n  }\n\n  const onInputChange = () => {\n    if (states.inputValue.length > 0 && !expanded.value) {\n      expanded.value = true\n    }\n    handleQueryChange(states.inputValue)\n  }\n\n  const onInput = (event: Event) => {\n    states.inputValue = (event.target as HTMLInputElement).value\n    if (props.remote) {\n      debouncedOnInputChange()\n    } else {\n      return onInputChange()\n    }\n  }\n\n  const debouncedOnInputChange = lodashDebounce(() => {\n    onInputChange()\n  }, debounce.value)\n\n  const emitChange = (val: OptionValue | OptionValue[]) => {\n    if (!isEqual(props.modelValue, val)) {\n      emit(CHANGE_EVENT, val)\n    }\n  }\n\n  const getLastNotDisabledIndex = (value: OptionValue[]) =>\n    findLastIndex(value, (it) => {\n      const option = states.cachedOptions.get(it)\n      return option && !option.disabled && !option.states.groupDisabled\n    })\n\n  const deletePrevTag = (e: KeyboardEvent) => {\n    if (!props.multiple) return\n    if (e.code === EVENT_CODE.delete) return\n    if ((e.target as HTMLInputElement).value.length <= 0) {\n      const value = ensureArray(props.modelValue).slice()\n      const lastNotDisabledIndex = getLastNotDisabledIndex(value)\n      if (lastNotDisabledIndex < 0) return\n      const removeTagValue = value[lastNotDisabledIndex]\n      value.splice(lastNotDisabledIndex, 1)\n      emit(UPDATE_MODEL_EVENT, value)\n      emitChange(value)\n      emit('remove-tag', removeTagValue)\n    }\n  }\n\n  const deleteTag = (\n    event: MouseEvent,\n    tag: OptionPublicInstance | SelectStates['selected'][0]\n  ) => {\n    const index = states.selected.indexOf(tag)\n    if (index > -1 && !selectDisabled.value) {\n      const value = ensureArray(props.modelValue).slice()\n      value.splice(index, 1)\n      emit(UPDATE_MODEL_EVENT, value)\n      emitChange(value)\n      emit('remove-tag', tag.value)\n    }\n    event.stopPropagation()\n    focus()\n  }\n\n  const deleteSelected = (event: Event) => {\n    event.stopPropagation()\n    const value = props.multiple ? [] : valueOnClear.value\n    if (props.multiple) {\n      for (const item of states.selected) {\n        if (item.isDisabled) value.push(item.value)\n      }\n    }\n    emit(UPDATE_MODEL_EVENT, value)\n    emitChange(value)\n    states.hoveringIndex = -1\n    expanded.value = false\n    emit('clear')\n    focus()\n  }\n\n  const handleOptionSelect = (option: OptionPublicInstance) => {\n    if (props.multiple) {\n      const value = ensureArray(props.modelValue ?? []).slice()\n      const optionIndex = getValueIndex(value, option)\n      if (optionIndex > -1) {\n        value.splice(optionIndex, 1)\n      } else if (\n        props.multipleLimit <= 0 ||\n        value.length < props.multipleLimit\n      ) {\n        value.push(option.value)\n      }\n      emit(UPDATE_MODEL_EVENT, value)\n      emitChange(value)\n      if (option.created) {\n        handleQueryChange('')\n      }\n      if (props.filterable && !props.reserveKeyword) {\n        states.inputValue = ''\n      }\n    } else {\n      emit(UPDATE_MODEL_EVENT, option.value)\n      emitChange(option.value)\n      expanded.value = false\n    }\n    focus()\n    if (expanded.value) return\n    nextTick(() => {\n      scrollToOption(option)\n    })\n  }\n\n  const getValueIndex = (arr: OptionValue[], option: OptionPublicInstance) => {\n    if (isUndefined(option)) return -1\n    if (!isObject(option.value)) return arr.indexOf(option.value)\n\n    return arr.findIndex((item) => {\n      return isEqual(get(item, props.valueKey), getValueKey(option))\n    })\n  }\n\n  const scrollToOption = (\n    option:\n      | OptionPublicInstance\n      | OptionPublicInstance[]\n      | SelectStates['selected']\n  ) => {\n    const targetOption = isArray(option) ? option[0] : option\n    let target = null\n\n    if (targetOption?.value) {\n      const options = optionsArray.value.filter(\n        (item) => item.value === targetOption.value\n      )\n      if (options.length > 0) {\n        target = options[0].$el\n      }\n    }\n\n    if (tooltipRef.value && target) {\n      const menu = tooltipRef.value?.popperRef?.contentRef?.querySelector?.(\n        `.${nsSelect.be('dropdown', 'wrap')}`\n      )\n      if (menu) {\n        scrollIntoView(menu as HTMLElement, target)\n      }\n    }\n    scrollbarRef.value?.handleScroll()\n  }\n\n  const onOptionCreate = (vm: OptionPublicInstance) => {\n    states.options.set(vm.value, vm)\n    states.cachedOptions.set(vm.value, vm)\n  }\n\n  const onOptionDestroy = (key: OptionValue, vm: OptionPublicInstance) => {\n    if (states.options.get(key) === vm) {\n      states.options.delete(key)\n    }\n  }\n\n  const popperRef = computed(() => {\n    return tooltipRef.value?.popperRef?.contentRef\n  })\n\n  const handleMenuEnter = () => {\n    states.isBeforeHide = false\n    nextTick(() => {\n      scrollbarRef.value?.update()\n      scrollToOption(states.selected)\n    })\n  }\n\n  const focus = () => {\n    inputRef.value?.focus()\n  }\n\n  const blur = () => {\n    if (expanded.value) {\n      expanded.value = false\n      nextTick(() => inputRef.value?.blur())\n      return\n    }\n    inputRef.value?.blur()\n  }\n\n  const handleClearClick = (event: Event) => {\n    deleteSelected(event)\n  }\n\n  const handleClickOutside = (event: Event) => {\n    expanded.value = false\n\n    if (isFocused.value) {\n      const _event = new FocusEvent('focus', event)\n      nextTick(() => handleBlur(_event))\n    }\n  }\n\n  const handleEsc = () => {\n    if (states.inputValue.length > 0) {\n      states.inputValue = ''\n    } else {\n      expanded.value = false\n    }\n  }\n\n  const toggleMenu = () => {\n    if (selectDisabled.value) return\n\n    // We only set the inputHovering state to true on mouseenter event on iOS devices\n    // To keep the state updated we set it here to true\n    if (isIOS) states.inputHovering = true\n\n    if (states.menuVisibleOnFocus) {\n      // controlled by automaticDropdown\n      states.menuVisibleOnFocus = false\n    } else {\n      expanded.value = !expanded.value\n    }\n  }\n\n  const selectOption = () => {\n    if (!expanded.value) {\n      toggleMenu()\n    } else {\n      const option = optionsArray.value[states.hoveringIndex]\n      if (option && !option.isDisabled) {\n        handleOptionSelect(option)\n      }\n    }\n  }\n\n  const getValueKey = (\n    item: OptionPublicInstance | SelectStates['selected'][0]\n  ) => {\n    return isObject(item.value) ? get(item.value, props.valueKey) : item.value\n  }\n\n  const optionsAllDisabled = computed(() =>\n    optionsArray.value\n      .filter((option) => option.visible)\n      .every((option) => option.isDisabled)\n  )\n\n  const showTagList = computed(() => {\n    if (!props.multiple) {\n      return []\n    }\n    return props.collapseTags\n      ? states.selected.slice(0, props.maxCollapseTags)\n      : states.selected\n  })\n\n  const collapseTagList = computed(() => {\n    if (!props.multiple) {\n      return []\n    }\n    return props.collapseTags\n      ? states.selected.slice(props.maxCollapseTags)\n      : []\n  })\n\n  const navigateOptions = (direction: 'prev' | 'next') => {\n    if (!expanded.value) {\n      expanded.value = true\n      return\n    }\n    if (\n      states.options.size === 0 ||\n      filteredOptionsCount.value === 0 ||\n      isComposing.value\n    )\n      return\n\n    if (!optionsAllDisabled.value) {\n      if (direction === 'next') {\n        states.hoveringIndex++\n        if (states.hoveringIndex === states.options.size) {\n          states.hoveringIndex = 0\n        }\n      } else if (direction === 'prev') {\n        states.hoveringIndex--\n        if (states.hoveringIndex < 0) {\n          states.hoveringIndex = states.options.size - 1\n        }\n      }\n      const option = optionsArray.value[states.hoveringIndex]\n      if (option.isDisabled || !option.visible) {\n        navigateOptions(direction)\n      }\n      nextTick(() => scrollToOption(hoverOption.value))\n    }\n  }\n\n  const getGapWidth = () => {\n    if (!selectionRef.value) return 0\n    const style = window.getComputedStyle(selectionRef.value)\n    return Number.parseFloat(style.gap || '6px')\n  }\n\n  // computed style\n  const tagStyle = computed(() => {\n    const gapWidth = getGapWidth()\n    const maxWidth =\n      collapseItemRef.value && props.maxCollapseTags === 1\n        ? states.selectionWidth - states.collapseItemWidth - gapWidth\n        : states.selectionWidth\n    return { maxWidth: `${maxWidth}px` }\n  })\n\n  const collapseTagStyle = computed(() => {\n    return { maxWidth: `${states.selectionWidth}px` }\n  })\n\n  const popupScroll = (data: { scrollTop: number; scrollLeft: number }) => {\n    emit('popup-scroll', data)\n  }\n\n  useResizeObserver(selectionRef, resetSelectionWidth)\n  useResizeObserver(menuRef, updateTooltip)\n  useResizeObserver(wrapperRef, updateTooltip)\n  useResizeObserver(tagMenuRef, updateTagTooltip)\n  useResizeObserver(collapseItemRef, resetCollapseItemWidth)\n\n  onMounted(() => {\n    setSelected()\n  })\n\n  return {\n    inputId,\n    contentId,\n    nsSelect,\n    nsInput,\n    states,\n    isFocused,\n    expanded,\n    optionsArray,\n    hoverOption,\n    selectSize,\n    filteredOptionsCount,\n    updateTooltip,\n    updateTagTooltip,\n    debouncedOnInputChange,\n    onInput,\n    deletePrevTag,\n    deleteTag,\n    deleteSelected,\n    handleOptionSelect,\n    scrollToOption,\n    hasModelValue,\n    shouldShowPlaceholder,\n    currentPlaceholder,\n    mouseEnterEventName,\n    needStatusIcon,\n    showClose,\n    iconComponent,\n    iconReverse,\n    validateState,\n    validateIcon,\n    showNewOption,\n    updateOptions,\n    collapseTagSize,\n    setSelected,\n    selectDisabled,\n    emptyText,\n    handleCompositionStart,\n    handleCompositionUpdate,\n    handleCompositionEnd,\n    onOptionCreate,\n    onOptionDestroy,\n    handleMenuEnter,\n    focus,\n    blur,\n    handleClearClick,\n    handleClickOutside,\n    handleEsc,\n    toggleMenu,\n    selectOption,\n    getValueKey,\n    navigateOptions,\n    dropdownMenuVisible,\n    showTagList,\n    collapseTagList,\n    popupScroll,\n\n    // computed style\n    tagStyle,\n    collapseTagStyle,\n\n    // DOM ref\n    popperRef,\n    inputRef,\n    tooltipRef,\n    tagTooltipRef,\n    prefixRef,\n    suffixRef,\n    selectRef,\n    wrapperRef,\n    selectionRef,\n    scrollbarRef,\n    menuRef,\n    tagMenuRef,\n    collapseItemRef,\n  }\n}\n", "import { defineComponent, inject } from 'vue'\nimport { isEqual } from 'lodash-unified'\nimport { isArray, isFunction, isString } from '@element-plus/utils'\nimport { selectKey } from './token'\n\nimport type { Component, VNode, VNodeNormalizedChildren } from 'vue'\nimport type { OptionValue } from './type'\n\nexport default defineComponent({\n  name: 'ElOptions',\n  setup(_, { slots }) {\n    const select = inject(selectKey)\n    let cachedValueList: OptionValue[] = []\n\n    return () => {\n      const children = slots.default?.()!\n      const valueList: OptionValue[] = []\n\n      function filterOptions(children?: VNodeNormalizedChildren) {\n        if (!isArray(children)) return\n        ;(children as VNode[]).forEach((item) => {\n          const name = ((item?.type || {}) as Component)?.name\n\n          if (name === 'ElOptionGroup') {\n            filterOptions(\n              !isString(item.children) &&\n                !isArray(item.children) &&\n                isFunction(item.children?.default)\n                ? item.children?.default()\n                : item.children\n            )\n          } else if (name === 'ElOption') {\n            valueList.push(item.props?.value)\n          } else if (isArray(item.children)) {\n            filterOptions(item.children)\n          }\n        })\n      }\n\n      if (children.length) {\n        filterOptions(children[0]?.children)\n      }\n\n      if (!isEqual(valueList, cachedValueList)) {\n        cachedValueList = valueList\n        if (select) {\n          select.states.optionValues = valueList\n        }\n      }\n\n      return children\n    }\n  },\n})\n", "import { placements } from '@popperjs/core'\nimport { scrollbarEmits } from '@element-plus/components/scrollbar'\nimport {\n  useAriaProps,\n  useEmptyValuesProps,\n  useSizeProp,\n} from '@element-plus/hooks'\nimport {\n  EmitFn,\n  buildProps,\n  definePropType,\n  iconPropType,\n} from '@element-plus/utils'\nimport { useTooltipContentProps } from '@element-plus/components/tooltip'\nimport { ArrowDown, CircleClose } from '@element-plus/icons-vue'\nimport { tagProps } from '@element-plus/components/tag'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type Select from './select.vue'\nimport type {\n  Options,\n  Placement,\n  PopperEffect,\n} from '@element-plus/components/popper'\nimport type { OptionValue } from './type'\n\nexport const SelectProps = buildProps({\n  /**\n   * @description the name attribute of select input\n   */\n  name: String,\n  /**\n   * @description native input id\n   */\n  id: String,\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<OptionValue | OptionValue[]>([\n      Array,\n      String,\n      Number,\n      Boolean,\n      Object,\n    ]),\n    default: undefined,\n  },\n  /**\n   * @description the autocomplete attribute of select input\n   */\n  autocomplete: {\n    type: String,\n    default: 'off',\n  },\n  /**\n   * @description for non-filterable Select, this prop decides if the option menu pops up when the input is focused\n   */\n  automaticDropdown: Boolean,\n  /**\n   * @description size of Input\n   */\n  size: useSizeProp,\n  /**\n   * @description tooltip theme, built-in theme: `dark` / `light`\n   */\n  effect: {\n    type: definePropType<PopperEffect>(String),\n    default: 'light',\n  },\n  /**\n   * @description whether Select is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description whether select can be cleared\n   */\n  clearable: Boolean,\n  /**\n   * @description whether Select is filterable\n   */\n  filterable: Boolean,\n  /**\n   * @description whether creating new items is allowed. To use this, `filterable` must be true\n   */\n  allowCreate: Boolean,\n  /**\n   * @description whether Select is loading data from server\n   */\n  loading: Boolean,\n  /**\n   * @description custom class name for Select's dropdown\n   */\n  popperClass: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description [popper.js](https://popper.js.org/docs/v2/) parameters\n   */\n  popperOptions: {\n    type: definePropType<Partial<Options>>(Object),\n    default: () => ({} as Partial<Options>),\n  },\n  /**\n   * @description whether options are loaded from server\n   */\n  remote: Boolean,\n  /**\n   * @description displayed text while loading data from server, default is 'Loading'\n   */\n  loadingText: String,\n  /**\n   * @description displayed text when no data matches the filtering query, you can also use slot `empty`, default is 'No matching data'\n   */\n  noMatchText: String,\n  /**\n   * @description displayed text when there is no options, you can also use slot `empty`, default is 'No data'\n   */\n  noDataText: String,\n  /**\n   * @description custom remote search method\n   */\n  remoteMethod: Function,\n  /**\n   * @description custom filter method\n   */\n  filterMethod: Function,\n  /**\n   * @description whether multiple-select is activated\n   */\n  multiple: Boolean,\n  /**\n   * @description maximum number of options user can select when `multiple` is `true`. No limit when set to 0\n   */\n  multipleLimit: {\n    type: Number,\n    default: 0,\n  },\n  /**\n   * @description placeholder, default is 'Select'\n   */\n  placeholder: {\n    type: String,\n  },\n  /**\n   * @description select first matching option on enter key. Use with `filterable` or `remote`\n   */\n  defaultFirstOption: Boolean,\n  /**\n   * @description when `multiple` and `filter` is true, whether to reserve current keyword after selecting an option\n   */\n  reserveKeyword: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description unique identity key name for value, required when value is an object\n   */\n  valueKey: {\n    type: String,\n    default: 'value',\n  },\n  /**\n   * @description whether to collapse tags to a text when multiple selecting\n   */\n  collapseTags: Boolean,\n  /**\n   * @description whether show all selected tags when mouse hover text of collapse-tags. To use this, `collapse-tags` must be true\n   */\n  collapseTagsTooltip: Boolean,\n  /**\n   * @description the max tags number to be shown. To use this, `collapse-tags` must be true\n   */\n  maxCollapseTags: {\n    type: Number,\n    default: 1,\n  },\n  /**\n   * @description whether select dropdown is teleported, if `true` it will be teleported to where `append-to` sets\n   */\n  teleported: useTooltipContentProps.teleported,\n  /**\n   * @description when select dropdown is inactive and `persistent` is `false`, select dropdown will be destroyed\n   */\n  persistent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description custom clear icon component\n   */\n  clearIcon: {\n    type: iconPropType,\n    default: CircleClose,\n  },\n  /**\n   * @description whether the width of the dropdown is the same as the input\n   */\n  fitInputWidth: Boolean,\n  /**\n   * @description custom suffix icon component\n   */\n  suffixIcon: {\n    type: iconPropType,\n    default: ArrowDown,\n  },\n  /**\n   * @description tag type\n   */\n  // eslint-disable-next-line vue/require-prop-types\n  tagType: { ...tagProps.type, default: 'info' },\n  /**\n   * @description tag effect\n   */\n  tagEffect: { ...tagProps.effect, default: 'light' },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description in remote search method show suffix icon\n   */\n  remoteShowSuffix: Boolean,\n  /**\n   * @description determines whether the arrow is displayed\n   */\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description offset of the dropdown\n   */\n  offset: {\n    type: Number,\n    default: 12,\n  },\n  /**\n   * @description position of dropdown\n   */\n  placement: {\n    type: definePropType<Placement>(String),\n    values: placements,\n    default: 'bottom-start',\n  },\n  /**\n   * @description list of possible positions for dropdown\n   */\n  fallbackPlacements: {\n    type: definePropType<Placement[]>(Array),\n    default: ['bottom-start', 'top-start', 'right', 'left'],\n  },\n  /**\n   * @description tabindex for input\n   */\n  tabindex: {\n    type: [String, Number],\n    default: 0,\n  },\n  /**\n   * @description which element the selection dropdown appends to\n   */\n  appendTo: useTooltipContentProps.appendTo,\n  ...useEmptyValuesProps,\n  ...useAriaProps(['ariaLabel']),\n})\n/* eslint-disable @typescript-eslint/no-unused-vars */\nexport const selectEmits = {\n  [UPDATE_MODEL_EVENT]: (val: ISelectProps['modelValue']) => true,\n  [CHANGE_EVENT]: (val: ISelectProps['modelValue']) => true,\n  'popup-scroll': scrollbarEmits.scroll,\n  'remove-tag': (val: unknown) => true,\n  'visible-change': (visible: boolean) => true,\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n}\n/* eslint-enable @typescript-eslint/no-unused-vars */\n\nexport type ISelectProps = ExtractPropTypes<typeof SelectProps>\nexport type SelectEmits = EmitFn<typeof selectEmits>\nexport type SelectInstance = InstanceType<typeof Select> & unknown\n", "<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelect.b(), nsSelect.m(selectSize)]\"\n    @[mouseEnterEventName]=\"states.inputHovering = true\"\n    @mouseleave=\"states.inputHovering = false\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      :visible=\"dropdownMenuVisible\"\n      :placement=\"placement\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"fallbackPlacements\"\n      :effect=\"effect\"\n      pure\n      trigger=\"click\"\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      :stop-popper-mouse-event=\"false\"\n      :gpu-acceleration=\"false\"\n      :persistent=\"persistent\"\n      :append-to=\"appendTo\"\n      :show-arrow=\"showArrow\"\n      :offset=\"offset\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.isBeforeHide = false\"\n    >\n      <template #default>\n        <div\n          ref=\"wrapperRef\"\n          :class=\"[\n            nsSelect.e('wrapper'),\n            nsSelect.is('focused', isFocused),\n            nsSelect.is('hovering', states.inputHovering),\n            nsSelect.is('filterable', filterable),\n            nsSelect.is('disabled', selectDisabled),\n          ]\"\n          @click.prevent=\"toggleMenu\"\n        >\n          <div\n            v-if=\"$slots.prefix\"\n            ref=\"prefixRef\"\n            :class=\"nsSelect.e('prefix')\"\n          >\n            <slot name=\"prefix\" />\n          </div>\n          <div\n            ref=\"selectionRef\"\n            :class=\"[\n              nsSelect.e('selection'),\n              nsSelect.is(\n                'near',\n                multiple && !$slots.prefix && !!states.selected.length\n              ),\n            ]\"\n          >\n            <slot v-if=\"multiple\" name=\"tag\">\n              <div\n                v-for=\"item in showTagList\"\n                :key=\"getValueKey(item)\"\n                :class=\"nsSelect.e('selected-item')\"\n              >\n                <el-tag\n                  :closable=\"!selectDisabled && !item.isDisabled\"\n                  :size=\"collapseTagSize\"\n                  :type=\"tagType\"\n                  :effect=\"tagEffect\"\n                  disable-transitions\n                  :style=\"tagStyle\"\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span :class=\"nsSelect.e('tags-text')\">\n                    <slot\n                      name=\"label\"\n                      :label=\"item.currentLabel\"\n                      :value=\"item.value\"\n                    >\n                      {{ item.currentLabel }}\n                    </slot>\n                  </span>\n                </el-tag>\n              </div>\n\n              <el-tooltip\n                v-if=\"collapseTags && states.selected.length > maxCollapseTags\"\n                ref=\"tagTooltipRef\"\n                :disabled=\"dropdownMenuVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                :effect=\"effect\"\n                placement=\"bottom\"\n                :teleported=\"teleported\"\n              >\n                <template #default>\n                  <div\n                    ref=\"collapseItemRef\"\n                    :class=\"nsSelect.e('selected-item')\"\n                  >\n                    <el-tag\n                      :closable=\"false\"\n                      :size=\"collapseTagSize\"\n                      :type=\"tagType\"\n                      :effect=\"tagEffect\"\n                      disable-transitions\n                      :style=\"collapseTagStyle\"\n                    >\n                      <span :class=\"nsSelect.e('tags-text')\">\n                        + {{ states.selected.length - maxCollapseTags }}\n                      </span>\n                    </el-tag>\n                  </div>\n                </template>\n                <template #content>\n                  <div ref=\"tagMenuRef\" :class=\"nsSelect.e('selection')\">\n                    <div\n                      v-for=\"item in collapseTagList\"\n                      :key=\"getValueKey(item)\"\n                      :class=\"nsSelect.e('selected-item')\"\n                    >\n                      <el-tag\n                        class=\"in-tooltip\"\n                        :closable=\"!selectDisabled && !item.isDisabled\"\n                        :size=\"collapseTagSize\"\n                        :type=\"tagType\"\n                        :effect=\"tagEffect\"\n                        disable-transitions\n                        @close=\"deleteTag($event, item)\"\n                      >\n                        <span :class=\"nsSelect.e('tags-text')\">\n                          <slot\n                            name=\"label\"\n                            :label=\"item.currentLabel\"\n                            :value=\"item.value\"\n                          >\n                            {{ item.currentLabel }}\n                          </slot>\n                        </span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </slot>\n            <div\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('input-wrapper'),\n                nsSelect.is('hidden', !filterable),\n              ]\"\n            >\n              <input\n                :id=\"inputId\"\n                ref=\"inputRef\"\n                v-model=\"states.inputValue\"\n                type=\"text\"\n                :name=\"name\"\n                :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n                :disabled=\"selectDisabled\"\n                :autocomplete=\"autocomplete\"\n                :style=\"inputStyle\"\n                :tabindex=\"tabindex\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                :aria-activedescendant=\"hoverOption?.id || ''\"\n                :aria-controls=\"contentId\"\n                :aria-expanded=\"dropdownMenuVisible\"\n                :aria-label=\"ariaLabel\"\n                aria-autocomplete=\"none\"\n                aria-haspopup=\"listbox\"\n                @keydown.down.stop.prevent=\"navigateOptions('next')\"\n                @keydown.up.stop.prevent=\"navigateOptions('prev')\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.enter.stop.prevent=\"selectOption\"\n                @keydown.delete.stop=\"deletePrevTag\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @input=\"onInput\"\n                @click.stop=\"toggleMenu\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelect.e('input-calculator')\"\n                v-text=\"states.inputValue\"\n              />\n            </div>\n            <div\n              v-if=\"shouldShowPlaceholder\"\n              :class=\"[\n                nsSelect.e('selected-item'),\n                nsSelect.e('placeholder'),\n                nsSelect.is(\n                  'transparent',\n                  !hasModelValue || (expanded && !states.inputValue)\n                ),\n              ]\"\n            >\n              <slot\n                v-if=\"hasModelValue\"\n                name=\"label\"\n                :label=\"currentPlaceholder\"\n                :value=\"modelValue\"\n              >\n                <span>{{ currentPlaceholder }}</span>\n              </slot>\n              <span v-else>{{ currentPlaceholder }}</span>\n            </div>\n          </div>\n          <div ref=\"suffixRef\" :class=\"nsSelect.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent && !showClose\"\n              :class=\"[nsSelect.e('caret'), nsSelect.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClose && clearIcon\"\n              :class=\"[\n                nsSelect.e('caret'),\n                nsSelect.e('icon'),\n                nsSelect.e('clear'),\n              ]\"\n              @click=\"handleClearClick\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon && needStatusIcon\"\n              :class=\"[\n                nsInput.e('icon'),\n                nsInput.e('validateIcon'),\n                nsInput.is('loading', validateState === 'validating'),\n              ]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </div>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu ref=\"menuRef\">\n          <div\n            v-if=\"$slots.header\"\n            :class=\"nsSelect.be('dropdown', 'header')\"\n            @click.stop\n          >\n            <slot name=\"header\" />\n          </div>\n          <el-scrollbar\n            v-show=\"states.options.size > 0 && !loading\"\n            :id=\"contentId\"\n            ref=\"scrollbarRef\"\n            tag=\"ul\"\n            :wrap-class=\"nsSelect.be('dropdown', 'wrap')\"\n            :view-class=\"nsSelect.be('dropdown', 'list')\"\n            :class=\"[nsSelect.is('empty', filteredOptionsCount === 0)]\"\n            role=\"listbox\"\n            :aria-label=\"ariaLabel\"\n            aria-orientation=\"vertical\"\n            @scroll=\"popupScroll\"\n          >\n            <el-option\n              v-if=\"showNewOption\"\n              :value=\"states.inputValue\"\n              :created=\"true\"\n            />\n            <el-options>\n              <slot />\n            </el-options>\n          </el-scrollbar>\n          <div\n            v-if=\"$slots.loading && loading\"\n            :class=\"nsSelect.be('dropdown', 'loading')\"\n          >\n            <slot name=\"loading\" />\n          </div>\n          <div\n            v-else-if=\"loading || filteredOptionsCount === 0\"\n            :class=\"nsSelect.be('dropdown', 'empty')\"\n          >\n            <slot name=\"empty\">\n              <span>{{ emptyText }}</span>\n            </slot>\n          </div>\n          <div\n            v-if=\"$slots.footer\"\n            :class=\"nsSelect.be('dropdown', 'footer')\"\n            @click.stop\n          >\n            <slot name=\"footer\" />\n          </div>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, provide, reactive, toRefs } from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { isArray } from '@element-plus/utils'\nimport { useCalcInputWidth } from '@element-plus/hooks'\nimport ElOption from './option.vue'\nimport ElSelectMenu from './select-dropdown.vue'\nimport { useSelect } from './useSelect'\nimport { selectKey } from './token'\nimport ElOptions from './options'\nimport { SelectProps } from './select'\n\nimport type { SelectContext } from './type'\n\nconst COMPONENT_NAME = 'ElSelect'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElSelectMenu,\n    ElOption,\n    ElOptions,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: SelectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n    'popup-scroll',\n  ],\n\n  setup(props, { emit }) {\n    const modelValue = computed(() => {\n      const { modelValue: rawModelValue, multiple } = props\n      const fallback = multiple ? [] : undefined\n      // When it is array, we check if this is multi-select.\n      // Based on the result we get\n      if (isArray(rawModelValue)) {\n        return multiple ? rawModelValue : fallback\n      }\n\n      return multiple ? fallback : rawModelValue\n    })\n\n    const _props = reactive({\n      ...toRefs(props),\n      modelValue,\n    })\n\n    const API = useSelect(_props, emit)\n    const { calculatorRef, inputStyle } = useCalcInputWidth()\n\n    provide(\n      selectKey,\n      reactive({\n        props: _props,\n        states: API.states,\n        selectRef: API.selectRef,\n        optionsArray: API.optionsArray,\n        setSelected: API.setSelected,\n        handleOptionSelect: API.handleOptionSelect,\n        onOptionCreate: API.onOptionCreate,\n        onOptionDestroy: API.onOptionDestroy,\n      }) satisfies SelectContext\n    )\n\n    const selectedLabel = computed(() => {\n      if (!props.multiple) {\n        return API.states.selectedLabel\n      }\n      return API.states.selected.map((i) => i.currentLabel as string)\n    })\n\n    return {\n      ...API,\n      modelValue,\n      selectedLabel,\n      calculatorRef,\n      inputStyle,\n    }\n  },\n})\n</script>\n", "<template>\n  <ul v-show=\"visible\" ref=\"groupRef\" :class=\"ns.be('group', 'wrap')\">\n    <li :class=\"ns.be('group', 'title')\">{{ label }}</li>\n    <li>\n      <ul :class=\"ns.b('group')\">\n        <slot />\n      </ul>\n    </li>\n  </ul>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  isVNode,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n} from 'vue'\nimport { useMutationObserver } from '@vueuse/core'\nimport { ensureArray, isArray } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { selectGroupKey } from './token'\n\nimport type { Component, VNode, VNodeArrayChildren } from 'vue'\nimport type { OptionInternalInstance, OptionPublicInstance } from './type'\n\nexport default defineComponent({\n  name: 'ElOptionGroup',\n  componentName: 'ElOptionGroup',\n\n  props: {\n    /**\n     * @description name of the group\n     */\n    label: String,\n    /**\n     * @description whether to disable all options in this group\n     */\n    disabled: Boolean,\n  },\n  setup(props) {\n    const ns = useNamespace('select')\n    const groupRef = ref<HTMLElement>()\n    const instance = getCurrentInstance()!\n    const children = ref<OptionPublicInstance[]>([])\n\n    provide(\n      selectGroupKey,\n      reactive({\n        ...toRefs(props),\n      })\n    )\n\n    const visible = computed(() =>\n      children.value.some((option) => option.visible === true)\n    )\n\n    const isOption = (\n      node: VNode\n    ): node is VNode & { component: OptionInternalInstance } =>\n      (node.type as Component).name === 'ElOption' && !!node.component?.proxy\n\n    // get all instances of options\n    const flattedChildren = (node: VNode | VNodeArrayChildren) => {\n      const nodes = ensureArray(node) as VNode[] | VNodeArrayChildren\n      const children: OptionPublicInstance[] = []\n\n      nodes.forEach((child) => {\n        if (!isVNode(child)) return\n\n        if (isOption(child)) {\n          children.push(child.component.proxy)\n        } else if (isArray(child.children) && child.children.length) {\n          children.push(...flattedChildren(child.children))\n        } else if (child.component?.subTree) {\n          children.push(...flattedChildren(child.component.subTree))\n        }\n      })\n\n      return children\n    }\n\n    const updateChildren = () => {\n      children.value = flattedChildren(instance.subTree)\n    }\n\n    onMounted(() => {\n      updateChildren()\n    })\n\n    useMutationObserver(groupRef, updateChildren, {\n      attributes: true,\n      subtree: true,\n      childList: true,\n    })\n\n    return {\n      groupRef,\n      visible,\n      ns,\n    }\n  },\n})\n</script>\n", "import { withInstall, withNoopInstall } from '@element-plus/utils'\nimport Select from './src/select.vue'\nimport Option from './src/option.vue'\nimport OptionGroup from './src/option-group.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElSelect: SFCWithInstall<typeof Select> & {\n  Option: typeof Option\n  OptionGroup: typeof OptionGroup\n} = withInstall(Select, {\n  Option,\n  OptionGroup,\n})\nexport default ElSelect\nexport const ElOption: SFCWithInstall<typeof Option> = withNoopInstall(Option)\nexport const ElOptionGroup: SFCWithInstall<typeof OptionGroup> =\n  withNoopInstall(OptionGroup)\n\nexport * from './src/token'\nexport * from './src/select'\n\nexport type {\n  SelectContext,\n  OptionPublicInstance as SelectOptionProxy,\n  OptionBasic,\n} from './src/type'\n", "import type { SetupContext } from 'vue'\nimport type Node from './node'\nimport type { RootTreeType, TreeKey, TreeNodeData } from '../tree.type'\n\nexport const NODE_KEY = '$treeNodeId'\n\nexport const markNodeData = function (node: Node, data: TreeNodeData): void {\n  if (!data || data[NODE_KEY]) return\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  })\n}\n\nexport const getNodeKey = (key: TreeKey, data: TreeNodeData) =>\n  data?.[key || NODE_KEY]\n\nexport const handleCurrentChange = (\n  store: RootTreeType['store'],\n  emit: SetupContext['emit'],\n  setCurrent: () => void\n) => {\n  const preCurrentNode = store.value.currentNode\n  setCurrent()\n  const currentNode = store.value.currentNode\n  if (preCurrentNode === currentNode) return\n\n  emit('current-change', currentNode ? currentNode.data : null, currentNode)\n}\n", "// @ts-nocheck\nimport { reactive } from 'vue'\nimport {\n  hasOwn,\n  isArray,\n  isBoolean,\n  isFunction,\n  isString,\n  isUndefined,\n} from '@element-plus/utils'\nimport { NODE_KEY, markNodeData } from './util'\nimport type TreeStore from './tree-store'\n\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  FakeNode,\n  TreeKey,\n  TreeNodeChildState,\n  TreeNodeData,\n  TreeNodeLoadedDefaultProps,\n  TreeNodeOptions,\n} from '../tree.type'\n\nexport const getChildState = (node: Node[]): TreeNodeChildState => {\n  let all = true\n  let none = true\n  let allWithoutDisable = true\n  for (let i = 0, j = node.length; i < j; i++) {\n    const n = node[i]\n    if (n.checked !== true || n.indeterminate) {\n      all = false\n      if (!n.disabled) {\n        allWithoutDisable = false\n      }\n    }\n    if (n.checked !== false || n.indeterminate) {\n      none = false\n    }\n  }\n\n  return { all, none, allWithoutDisable, half: !all && !none }\n}\n\nconst reInitChecked = function (node: Node): void {\n  if (node.childNodes.length === 0 || node.loading) return\n\n  const { all, none, half } = getChildState(node.childNodes)\n  if (all) {\n    node.checked = true\n    node.indeterminate = false\n  } else if (half) {\n    node.checked = false\n    node.indeterminate = true\n  } else if (none) {\n    node.checked = false\n    node.indeterminate = false\n  }\n\n  const parent = node.parent\n  if (!parent || parent.level === 0) return\n\n  if (!node.store.checkStrictly) {\n    reInitChecked(parent)\n  }\n}\n\nconst getPropertyFromData = function (node: Node, prop: string): any {\n  const props = node.store.props\n  const data = node.data || {}\n  const config = props[prop]\n\n  if (isFunction(config)) {\n    return config(data, node)\n  } else if (isString(config)) {\n    return data[config]\n  } else if (isUndefined(config)) {\n    const dataProp = data[prop]\n    return isUndefined(dataProp) ? '' : dataProp\n  }\n}\n\nlet nodeIdSeed = 0\n\nclass Node {\n  id: number\n  text: string\n  checked: boolean\n  indeterminate: boolean\n  data: TreeNodeData\n  expanded: boolean\n  parent: Node\n  visible: boolean\n  isCurrent: boolean\n  store: TreeStore\n  isLeafByUser: boolean\n  isLeaf: boolean\n  canFocus: boolean\n\n  level: number\n  loaded: boolean\n  childNodes: Node[]\n  loading: boolean\n\n  constructor(options: TreeNodeOptions) {\n    this.id = nodeIdSeed++\n    this.text = null\n    this.checked = false\n    this.indeterminate = false\n    this.data = null\n    this.expanded = false\n    this.parent = null\n    this.visible = true\n    this.isCurrent = false\n    this.canFocus = false\n\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        this[name] = options[name]\n      }\n    }\n\n    // internal\n    this.level = 0\n    this.loaded = false\n    this.childNodes = []\n    this.loading = false\n\n    if (this.parent) {\n      this.level = this.parent.level + 1\n    }\n  }\n\n  initialize() {\n    const store = this.store\n    if (!store) {\n      throw new Error('[Node]store is required!')\n    }\n    store.registerNode(this)\n\n    const props = store.props\n    if (props && typeof props.isLeaf !== 'undefined') {\n      const isLeaf = getPropertyFromData(this, 'isLeaf')\n      if (isBoolean(isLeaf)) {\n        this.isLeafByUser = isLeaf\n      }\n    }\n\n    if (store.lazy !== true && this.data) {\n      this.setData(this.data)\n\n      if (store.defaultExpandAll) {\n        this.expanded = true\n        this.canFocus = true\n      }\n    } else if (\n      this.level > 0 &&\n      store.lazy &&\n      store.defaultExpandAll &&\n      !this.isLeafByUser\n    ) {\n      this.expand()\n    }\n    if (!isArray(this.data)) {\n      markNodeData(this, this.data)\n    }\n    if (!this.data) return\n\n    const defaultExpandedKeys = store.defaultExpandedKeys\n    const key = store.key\n\n    if (key && defaultExpandedKeys && defaultExpandedKeys.includes(this.key)) {\n      this.expand(null, store.autoExpandParent)\n    }\n\n    if (\n      key &&\n      store.currentNodeKey !== undefined &&\n      this.key === store.currentNodeKey\n    ) {\n      store.currentNode = this\n      store.currentNode.isCurrent = true\n    }\n\n    if (store.lazy) {\n      store._initDefaultCheckedNode(this)\n    }\n\n    this.updateLeafState()\n    if (this.parent && (this.level === 1 || this.parent.expanded === true))\n      this.canFocus = true\n  }\n\n  setData(data: TreeNodeData): void {\n    if (!isArray(data)) {\n      markNodeData(this, data)\n    }\n\n    this.data = data\n    this.childNodes = []\n\n    let children\n    if (this.level === 0 && isArray(this.data)) {\n      children = this.data\n    } else {\n      children = getPropertyFromData(this, 'children') || []\n    }\n\n    for (let i = 0, j = children.length; i < j; i++) {\n      this.insertChild({ data: children[i] })\n    }\n  }\n\n  get label(): string {\n    return getPropertyFromData(this, 'label')\n  }\n\n  get key(): TreeKey {\n    const nodeKey = this.store.key\n    if (this.data) return this.data[nodeKey]\n    return null\n  }\n\n  get disabled(): boolean {\n    return getPropertyFromData(this, 'disabled')\n  }\n\n  get nextSibling(): Nullable<Node> {\n    const parent = this.parent\n    if (parent) {\n      const index = parent.childNodes.indexOf(this)\n      if (index > -1) {\n        return parent.childNodes[index + 1]\n      }\n    }\n    return null\n  }\n\n  get previousSibling(): Nullable<Node> {\n    const parent = this.parent\n    if (parent) {\n      const index = parent.childNodes.indexOf(this)\n      if (index > -1) {\n        return index > 0 ? parent.childNodes[index - 1] : null\n      }\n    }\n    return null\n  }\n\n  contains(target: Node, deep = true): boolean {\n    return (this.childNodes || []).some(\n      (child) => child === target || (deep && child.contains(target))\n    )\n  }\n\n  remove(): void {\n    const parent = this.parent\n    if (parent) {\n      parent.removeChild(this)\n    }\n  }\n\n  insertChild(child?: FakeNode | Node, index?: number, batch?: boolean): void {\n    if (!child) throw new Error('InsertChild error: child is required.')\n\n    if (!(child instanceof Node)) {\n      if (!batch) {\n        const children = this.getChildren(true)\n        if (!children.includes(child.data)) {\n          if (isUndefined(index) || index < 0) {\n            children.push(child.data)\n          } else {\n            children.splice(index, 0, child.data)\n          }\n        }\n      }\n      Object.assign(child, {\n        parent: this,\n        store: this.store,\n      })\n      child = reactive(new Node(child as TreeNodeOptions))\n      if (child instanceof Node) {\n        child.initialize()\n      }\n    }\n\n    ;(child as Node).level = this.level + 1\n\n    if (isUndefined(index) || index < 0) {\n      this.childNodes.push(child as Node)\n    } else {\n      this.childNodes.splice(index, 0, child as Node)\n    }\n\n    this.updateLeafState()\n  }\n\n  insertBefore(child: FakeNode | Node, ref: Node): void {\n    let index\n    if (ref) {\n      index = this.childNodes.indexOf(ref)\n    }\n    this.insertChild(child, index)\n  }\n\n  insertAfter(child: FakeNode | Node, ref: Node): void {\n    let index\n    if (ref) {\n      index = this.childNodes.indexOf(ref)\n      if (index !== -1) index += 1\n    }\n    this.insertChild(child, index)\n  }\n\n  removeChild(child: Node): void {\n    const children = this.getChildren() || []\n    const dataIndex = children.indexOf(child.data)\n    if (dataIndex > -1) {\n      children.splice(dataIndex, 1)\n    }\n\n    const index = this.childNodes.indexOf(child)\n\n    if (index > -1) {\n      this.store && this.store.deregisterNode(child)\n      child.parent = null\n      this.childNodes.splice(index, 1)\n    }\n\n    this.updateLeafState()\n  }\n\n  removeChildByData(data: TreeNodeData): void {\n    let targetNode: Node = null\n\n    for (let i = 0; i < this.childNodes.length; i++) {\n      if (this.childNodes[i].data === data) {\n        targetNode = this.childNodes[i]\n        break\n      }\n    }\n\n    if (targetNode) {\n      this.removeChild(targetNode)\n    }\n  }\n\n  expand(callback?: () => void, expandParent?: boolean): void {\n    const done = (): void => {\n      if (expandParent) {\n        let parent = this.parent\n        while (parent.level > 0) {\n          parent.expanded = true\n          parent = parent.parent\n        }\n      }\n      this.expanded = true\n      if (callback) callback()\n      this.childNodes.forEach((item) => {\n        item.canFocus = true\n      })\n    }\n\n    if (this.shouldLoadData()) {\n      this.loadData((data) => {\n        if (isArray(data)) {\n          if (this.checked) {\n            this.setChecked(true, true)\n          } else if (!this.store.checkStrictly) {\n            reInitChecked(this)\n          }\n          done()\n        }\n      })\n    } else {\n      done()\n    }\n  }\n\n  doCreateChildren(\n    array: TreeNodeData[],\n    defaultProps: TreeNodeLoadedDefaultProps = {}\n  ): void {\n    array.forEach((item) => {\n      this.insertChild(\n        Object.assign({ data: item }, defaultProps),\n        undefined,\n        true\n      )\n    })\n  }\n\n  collapse(): void {\n    this.expanded = false\n    this.childNodes.forEach((item) => {\n      item.canFocus = false\n    })\n  }\n\n  shouldLoadData(): boolean {\n    return this.store.lazy === true && this.store.load && !this.loaded\n  }\n\n  updateLeafState(): void {\n    if (\n      this.store.lazy === true &&\n      this.loaded !== true &&\n      typeof this.isLeafByUser !== 'undefined'\n    ) {\n      this.isLeaf = this.isLeafByUser\n      return\n    }\n    const childNodes = this.childNodes\n    if (\n      !this.store.lazy ||\n      (this.store.lazy === true && this.loaded === true)\n    ) {\n      this.isLeaf = !childNodes || childNodes.length === 0\n      return\n    }\n    this.isLeaf = false\n  }\n\n  setChecked(\n    value?: boolean | string,\n    deep?: boolean,\n    recursion?: boolean,\n    passValue?: boolean\n  ) {\n    this.indeterminate = value === 'half'\n    this.checked = value === true\n\n    if (this.store.checkStrictly) return\n\n    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {\n      const { all, allWithoutDisable } = getChildState(this.childNodes)\n\n      if (!this.isLeaf && !all && allWithoutDisable) {\n        this.checked = false\n        value = false\n      }\n\n      const handleDescendants = (): void => {\n        if (deep) {\n          const childNodes = this.childNodes\n          for (let i = 0, j = childNodes.length; i < j; i++) {\n            const child = childNodes[i]\n            passValue = passValue || value !== false\n            const isCheck = child.disabled ? child.checked : passValue\n            child.setChecked(isCheck, deep, true, passValue)\n          }\n          const { half, all } = getChildState(childNodes)\n          if (!all) {\n            this.checked = all\n            this.indeterminate = half\n          }\n        }\n      }\n\n      if (this.shouldLoadData()) {\n        // Only work on lazy load data.\n        this.loadData(\n          () => {\n            handleDescendants()\n            reInitChecked(this)\n          },\n          {\n            checked: value !== false,\n          }\n        )\n        return\n      } else {\n        handleDescendants()\n      }\n    }\n\n    const parent = this.parent\n    if (!parent || parent.level === 0) return\n\n    if (!recursion) {\n      reInitChecked(parent)\n    }\n  }\n\n  getChildren(forceInit = false): TreeNodeData | TreeNodeData[] {\n    // this is data\n    if (this.level === 0) return this.data\n    const data = this.data\n    if (!data) return null\n\n    const props = this.store.props\n    let children = 'children'\n    if (props) {\n      children = props.children || 'children'\n    }\n\n    if (isUndefined(data[children])) {\n      data[children] = null\n    }\n\n    if (forceInit && !data[children]) {\n      data[children] = []\n    }\n\n    return data[children]\n  }\n\n  updateChildren(): void {\n    const newData = (this.getChildren() || []) as TreeNodeData[]\n    const oldData = this.childNodes.map((node) => node.data)\n\n    const newDataMap = {}\n    const newNodes = []\n\n    newData.forEach((item, index) => {\n      const key = item[NODE_KEY]\n      const isNodeExists =\n        !!key && oldData.findIndex((data) => data[NODE_KEY] === key) >= 0\n      if (isNodeExists) {\n        newDataMap[key] = { index, data: item }\n      } else {\n        newNodes.push({ index, data: item })\n      }\n    })\n\n    if (!this.store.lazy) {\n      oldData.forEach((item) => {\n        if (!newDataMap[item[NODE_KEY]]) this.removeChildByData(item)\n      })\n    }\n\n    newNodes.forEach(({ index, data }) => {\n      this.insertChild({ data }, index)\n    })\n\n    this.updateLeafState()\n  }\n\n  loadData(\n    callback: (node: Node) => void,\n    defaultProps: TreeNodeLoadedDefaultProps = {}\n  ) {\n    if (\n      this.store.lazy === true &&\n      this.store.load &&\n      !this.loaded &&\n      (!this.loading || Object.keys(defaultProps).length)\n    ) {\n      this.loading = true\n\n      const resolve = (children) => {\n        this.childNodes = []\n\n        this.doCreateChildren(children, defaultProps)\n        this.loaded = true\n        this.loading = false\n\n        this.updateLeafState()\n        if (callback) {\n          callback.call(this, children)\n        }\n      }\n      const reject = () => {\n        this.loading = false\n      }\n\n      this.store.load(this, resolve, reject)\n    } else {\n      if (callback) {\n        callback.call(this)\n      }\n    }\n  }\n\n  eachNode(callback: (node: Node) => void) {\n    const arr: Node[] = [this]\n    while (arr.length) {\n      const node = arr.shift()!\n      arr.unshift(...node.childNodes)\n      callback(node)\n    }\n  }\n\n  reInitChecked() {\n    if (this.store.checkStrictly) return\n    reInitChecked(this)\n  }\n}\n\nexport default Node\n", "// @ts-nocheck\nimport { nextTick } from 'vue'\nimport { hasOwn, isObject, isPropAbsent } from '@element-plus/utils'\nimport Node from './node'\nimport { getNodeKey } from './util'\n\nimport type {\n  FilterNodeMethodFunction,\n  FilterValue,\n  LoadFunction,\n  TreeData,\n  TreeKey,\n  TreeNodeData,\n  TreeOptionProps,\n  TreeStoreNodesMap,\n  TreeStoreOptions,\n} from '../tree.type'\n\nexport default class TreeStore {\n  currentNode: Node\n  currentNodeKey: TreeKey\n  nodesMap: TreeStoreNodesMap\n  root: Node\n  data: TreeData\n  lazy: boolean\n  load: LoadFunction\n  filterNodeMethod: FilterNodeMethodFunction\n  key: TreeKey\n  defaultCheckedKeys: TreeKey[]\n  checkStrictly: boolean\n  defaultExpandedKeys: TreeKey[]\n  autoExpandParent: boolean\n  defaultExpandAll: boolean\n  checkDescendants: boolean\n  props: TreeOptionProps\n\n  constructor(options: TreeStoreOptions) {\n    this.currentNode = null\n    this.currentNodeKey = null\n\n    for (const option in options) {\n      if (hasOwn(options, option)) {\n        this[option] = options[option]\n      }\n    }\n\n    this.nodesMap = {}\n  }\n\n  initialize() {\n    this.root = new Node({\n      data: this.data,\n      store: this,\n    })\n    this.root.initialize()\n\n    if (this.lazy && this.load) {\n      const loadFn = this.load\n      loadFn(this.root, (data) => {\n        this.root.doCreateChildren(data)\n        this._initDefaultCheckedNodes()\n      })\n    } else {\n      this._initDefaultCheckedNodes()\n    }\n  }\n\n  filter(value: FilterValue): void {\n    const filterNodeMethod = this.filterNodeMethod\n    const lazy = this.lazy\n    const traverse = async function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      for (const [index, child] of childNodes.entries()) {\n        child.visible = filterNodeMethod.call(child, value, child.data, child)\n\n        if (index % 80 === 0 && index > 0) {\n          await nextTick()\n        }\n        await traverse(child)\n      }\n\n      if (!(node as Node).visible && childNodes.length) {\n        let allHidden = true\n        allHidden = !childNodes.some((child) => child.visible)\n\n        if ((node as TreeStore).root) {\n          ;(node as TreeStore).root.visible = allHidden === false\n        } else {\n          ;(node as Node).visible = allHidden === false\n        }\n      }\n      if (!value) return\n\n      if ((node as Node).visible && !(node as Node).isLeaf) {\n        if (!lazy || node.loaded) {\n          ;(node as Node).expand()\n        }\n      }\n    }\n\n    traverse(this)\n  }\n\n  setData(newVal: TreeData): void {\n    const instanceChanged = newVal !== this.root.data\n    if (instanceChanged) {\n      this.nodesMap = {}\n      this.root.setData(newVal)\n      this._initDefaultCheckedNodes()\n      this.setCurrentNodeKey(this.currentNodeKey)\n    } else {\n      this.root.updateChildren()\n    }\n  }\n\n  getNode(data: TreeKey | TreeNodeData | Node): Node {\n    if (data instanceof Node) return data\n    const key = isObject(data) ? getNodeKey(this.key, data) : data\n    return this.nodesMap[key] || null\n  }\n\n  insertBefore(\n    data: TreeNodeData,\n    refData: TreeKey | TreeNodeData | Node\n  ): void {\n    const refNode = this.getNode(refData)\n    refNode.parent.insertBefore({ data }, refNode)\n  }\n\n  insertAfter(\n    data: TreeNodeData,\n    refData: TreeKey | TreeNodeData | Node\n  ): void {\n    const refNode = this.getNode(refData)\n    refNode.parent.insertAfter({ data }, refNode)\n  }\n\n  remove(data: TreeNodeData | Node): void {\n    const node = this.getNode(data)\n\n    if (node && node.parent) {\n      if (node === this.currentNode) {\n        this.currentNode = null\n      }\n      node.parent.removeChild(node)\n    }\n  }\n\n  append(data: TreeNodeData, parentData: TreeNodeData | TreeKey | Node): void {\n    const parentNode = !isPropAbsent(parentData)\n      ? this.getNode(parentData)\n      : this.root\n\n    if (parentNode) {\n      parentNode.insertChild({ data })\n    }\n  }\n\n  _initDefaultCheckedNodes(): void {\n    const defaultCheckedKeys = this.defaultCheckedKeys || []\n    const nodesMap = this.nodesMap\n\n    defaultCheckedKeys.forEach((checkedKey) => {\n      const node = nodesMap[checkedKey]\n\n      if (node) {\n        node.setChecked(true, !this.checkStrictly)\n      }\n    })\n  }\n\n  _initDefaultCheckedNode(node: Node): void {\n    const defaultCheckedKeys = this.defaultCheckedKeys || []\n\n    if (defaultCheckedKeys.includes(node.key)) {\n      node.setChecked(true, !this.checkStrictly)\n    }\n  }\n\n  setDefaultCheckedKey(newVal: TreeKey[]): void {\n    if (newVal !== this.defaultCheckedKeys) {\n      this.defaultCheckedKeys = newVal\n      this._initDefaultCheckedNodes()\n    }\n  }\n\n  registerNode(node: Node): void {\n    const key = this.key\n    if (!node || !node.data) return\n\n    if (!key) {\n      this.nodesMap[node.id] = node\n    } else {\n      const nodeKey = node.key\n      if (nodeKey !== undefined) this.nodesMap[node.key] = node\n    }\n  }\n\n  deregisterNode(node: Node): void {\n    const key = this.key\n    if (!key || !node || !node.data) return\n\n    node.childNodes.forEach((child) => {\n      this.deregisterNode(child)\n    })\n\n    delete this.nodesMap[node.key]\n  }\n\n  getCheckedNodes(\n    leafOnly = false,\n    includeHalfChecked = false\n  ): TreeNodeData[] {\n    const checkedNodes: TreeNodeData[] = []\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        if (\n          (child.checked || (includeHalfChecked && child.indeterminate)) &&\n          (!leafOnly || (leafOnly && child.isLeaf))\n        ) {\n          checkedNodes.push(child.data)\n        }\n\n        traverse(child)\n      })\n    }\n\n    traverse(this)\n\n    return checkedNodes\n  }\n\n  getCheckedKeys(leafOnly = false): TreeKey[] {\n    return this.getCheckedNodes(leafOnly).map((data) => (data || {})[this.key])\n  }\n\n  getHalfCheckedNodes(): TreeNodeData[] {\n    const nodes: TreeNodeData[] = []\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        if (child.indeterminate) {\n          nodes.push(child.data)\n        }\n\n        traverse(child)\n      })\n    }\n\n    traverse(this)\n\n    return nodes\n  }\n\n  getHalfCheckedKeys(): TreeKey[] {\n    return this.getHalfCheckedNodes().map((data) => (data || {})[this.key])\n  }\n\n  _getAllNodes(): Node[] {\n    const allNodes: Node[] = []\n    const nodesMap = this.nodesMap\n    for (const nodeKey in nodesMap) {\n      if (hasOwn(nodesMap, nodeKey)) {\n        allNodes.push(nodesMap[nodeKey])\n      }\n    }\n\n    return allNodes\n  }\n\n  updateChildren(key: TreeKey, data: TreeData): void {\n    const node = this.nodesMap[key]\n    if (!node) return\n    const childNodes = node.childNodes\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const child = childNodes[i]\n      this.remove(child.data)\n    }\n    for (let i = 0, j = data.length; i < j; i++) {\n      const child = data[i]\n      this.append(child, node.data)\n    }\n  }\n\n  _setCheckedKeys(\n    key: TreeKey,\n    leafOnly = false,\n    checkedKeys: { [key: string]: boolean }\n  ): void {\n    const allNodes = this._getAllNodes().sort((a, b) => a.level - b.level)\n    const cache = Object.create(null)\n    const keys = Object.keys(checkedKeys)\n    allNodes.forEach((node) => node.setChecked(false, false))\n    const cacheCheckedChild = (node) => {\n      node.childNodes.forEach((child) => {\n        cache[child.data[key]] = true\n        if (child.childNodes?.length) {\n          cacheCheckedChild(child)\n        }\n      })\n    }\n    for (let i = 0, j = allNodes.length; i < j; i++) {\n      const node = allNodes[i]\n      const nodeKey = node.data[key].toString()\n      const checked = keys.includes(nodeKey)\n      if (!checked) {\n        if (node.checked && !cache[nodeKey]) {\n          node.setChecked(false, false)\n        }\n        continue\n      }\n\n      if (node.childNodes.length) {\n        cacheCheckedChild(node)\n      }\n\n      if (node.isLeaf || this.checkStrictly) {\n        node.setChecked(true, false)\n        continue\n      }\n      node.setChecked(true, true)\n\n      if (leafOnly) {\n        node.setChecked(false, false)\n        const traverse = function (node: Node): void {\n          const childNodes = node.childNodes\n          childNodes.forEach((child) => {\n            if (!child.isLeaf) {\n              child.setChecked(false, false)\n            }\n            traverse(child)\n          })\n        }\n        traverse(node)\n      }\n    }\n  }\n\n  setCheckedNodes(array: Node[], leafOnly = false): void {\n    const key = this.key\n    const checkedKeys = {}\n    array.forEach((item) => {\n      checkedKeys[(item || {})[key]] = true\n    })\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys)\n  }\n\n  setCheckedKeys(keys: TreeKey[], leafOnly = false): void {\n    this.defaultCheckedKeys = keys\n    const key = this.key\n    const checkedKeys = {}\n    keys.forEach((key) => {\n      checkedKeys[key] = true\n    })\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys)\n  }\n\n  setDefaultExpandedKeys(keys: TreeKey[]) {\n    keys = keys || []\n    this.defaultExpandedKeys = keys\n    keys.forEach((key) => {\n      const node = this.getNode(key)\n      if (node) node.expand(null, this.autoExpandParent)\n    })\n  }\n\n  setChecked(\n    data: TreeKey | TreeNodeData,\n    checked: boolean,\n    deep: boolean\n  ): void {\n    const node = this.getNode(data)\n\n    if (node) {\n      node.setChecked(!!checked, deep)\n    }\n  }\n\n  getCurrentNode(): Node {\n    return this.currentNode\n  }\n\n  setCurrentNode(currentNode: Node): void {\n    const prevCurrentNode = this.currentNode\n    if (prevCurrentNode) {\n      prevCurrentNode.isCurrent = false\n    }\n    this.currentNode = currentNode\n    this.currentNode.isCurrent = true\n  }\n\n  setUserCurrentNode(node: Node, shouldAutoExpandParent = true): void {\n    const key = node[this.key]\n    const currNode = this.nodesMap[key]\n    this.setCurrentNode(currNode)\n    if (shouldAutoExpandParent && this.currentNode.level > 1) {\n      this.currentNode.parent.expand(null, true)\n    }\n  }\n\n  setCurrentNodeKey(key?: TreeKey, shouldAutoExpandParent = true): void {\n    this.currentNodeKey = key\n    if (isPropAbsent(key)) {\n      this.currentNode && (this.currentNode.isCurrent = false)\n      this.currentNode = null\n      return\n    }\n    const node = this.getNode(key)\n    if (node) {\n      this.setCurrentNode(node)\n      if (shouldAutoExpandParent && this.currentNode.level > 1) {\n        this.currentNode.parent.expand(null, true)\n      }\n    }\n  }\n}\n", "<template>\n  <transition :name=\"ns.b()\" v-on=\"on\">\n    <slot />\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useNamespace } from '@element-plus/hooks'\nimport type { RendererElement } from '@vue/runtime-core'\n\ndefineOptions({\n  name: 'ElCollapseTransition',\n})\n\nconst ns = useNamespace('collapse-transition')\n\nconst reset = (el: RendererElement) => {\n  el.style.maxHeight = ''\n  el.style.overflow = el.dataset.oldOverflow\n  el.style.paddingTop = el.dataset.oldPaddingTop\n  el.style.paddingBottom = el.dataset.oldPaddingBottom\n}\n\nconst on = {\n  beforeEnter(el: RendererElement) {\n    if (!el.dataset) el.dataset = {}\n\n    el.dataset.oldPaddingTop = el.style.paddingTop\n    el.dataset.oldPaddingBottom = el.style.paddingBottom\n    if (el.style.height) el.dataset.elExistsHeight = el.style.height\n\n    el.style.maxHeight = 0\n    el.style.paddingTop = 0\n    el.style.paddingBottom = 0\n  },\n\n  enter(el: RendererElement) {\n    requestAnimationFrame(() => {\n      el.dataset.oldOverflow = el.style.overflow\n      if (el.dataset.elExistsHeight) {\n        el.style.maxHeight = el.dataset.elExistsHeight\n      } else if (el.scrollHeight !== 0) {\n        el.style.maxHeight = `${el.scrollHeight}px`\n      } else {\n        el.style.maxHeight = 0\n      }\n\n      el.style.paddingTop = el.dataset.oldPaddingTop\n      el.style.paddingBottom = el.dataset.oldPaddingBottom\n      el.style.overflow = 'hidden'\n    })\n  },\n\n  afterEnter(el: RendererElement) {\n    el.style.maxHeight = ''\n    el.style.overflow = el.dataset.oldOverflow\n  },\n\n  enterCancelled(el: RendererElement) {\n    reset(el)\n  },\n\n  beforeLeave(el: RendererElement) {\n    if (!el.dataset) el.dataset = {}\n    el.dataset.oldPaddingTop = el.style.paddingTop\n    el.dataset.oldPaddingBottom = el.style.paddingBottom\n    el.dataset.oldOverflow = el.style.overflow\n\n    el.style.maxHeight = `${el.scrollHeight}px`\n    el.style.overflow = 'hidden'\n  },\n\n  leave(el: RendererElement) {\n    if (el.scrollHeight !== 0) {\n      el.style.maxHeight = 0\n      el.style.paddingTop = 0\n      el.style.paddingBottom = 0\n    }\n  },\n\n  afterLeave(el: RendererElement) {\n    reset(el)\n  },\n\n  leaveCancelled(el: RendererElement) {\n    reset(el)\n  },\n}\n</script>\n", "import { withInstall } from '@element-plus/utils'\nimport CollapseTransition from './src/collapse-transition.vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElCollapseTransition: SFCWithInstall<typeof CollapseTransition> =\n  withInstall(CollapseTransition)\n\nexport default ElCollapseTransition\n", "import { buildProps } from '@element-plus/utils'\nimport { componentSizes } from '@element-plus/constants'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const textProps = buildProps({\n  /**\n   * @description text type\n   */\n  type: {\n    type: String,\n    values: ['primary', 'success', 'info', 'warning', 'danger', ''],\n    default: '',\n  },\n  /**\n   * @description text size\n   */\n  size: {\n    type: String,\n    values: componentSizes,\n    default: '',\n  },\n  /**\n   * @description render ellipsis\n   */\n  truncated: Boolean,\n  /**\n   * @description maximum lines\n   */\n  lineClamp: {\n    type: [String, Number],\n  },\n  /**\n   * @description custom element tag\n   */\n  tag: {\n    type: String,\n    default: 'span',\n  },\n} as const)\n\nexport type TextProps = ExtractPropTypes<typeof textProps>\n", "<template>\n  <component\n    :is=\"tag\"\n    ref=\"textRef\"\n    :class=\"textKls\"\n    :style=\"{ '-webkit-line-clamp': lineClamp }\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, onMounted, onUpdated, ref, useAttrs } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormSize } from '@element-plus/components/form'\nimport { isUndefined } from '@element-plus/utils'\nimport { textProps } from './text'\n\ndefineOptions({\n  name: 'ElText',\n})\n\nconst props = defineProps(textProps)\nconst textRef = ref<HTMLElement>()\n\nconst textSize = useFormSize()\nconst ns = useNamespace('text')\n\nconst textKls = computed(() => [\n  ns.b(),\n  ns.m(props.type),\n  ns.m(textSize.value),\n  ns.is('truncated', props.truncated),\n  ns.is('line-clamp', !isUndefined(props.lineClamp)),\n])\n\nconst inheritTitle = useAttrs().title\n\nconst bindTitle = () => {\n  if (inheritTitle) return\n  let shouldAddTitle = false\n  const text = textRef.value?.textContent || ''\n  if (props.truncated) {\n    const width = textRef.value?.offsetWidth\n    const scrollWidth = textRef.value?.scrollWidth\n    if (width && scrollWidth && scrollWidth > width) {\n      shouldAddTitle = true\n    }\n  } else if (!isUndefined(props.lineClamp)) {\n    const height = textRef.value?.offsetHeight\n    const scrollHeight = textRef.value?.scrollHeight\n    if (height && scrollHeight && scrollHeight > height) {\n      shouldAddTitle = true\n    }\n  }\n  if (shouldAddTitle) {\n    textRef.value!.setAttribute('title', text)\n  } else {\n    textRef.value!.removeAttribute('title')\n  }\n}\n\nonMounted(bindTitle)\nonUpdated(bindTitle)\n</script>\n", "import { withInstall } from '@element-plus/utils'\n\nimport Text from './src/text.vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElText: SFCWithInstall<typeof Text> = withInstall(Text)\nexport default ElText\n\nexport * from './src/text'\n", "<script lang=\"ts\">\nimport { defineComponent, h, inject, renderSlot } from 'vue'\nimport ElText from '@element-plus/components/text'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')!\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : renderSlot(tree.ctx.slots, 'default', { node, data }, () => [\n            h(\n              ElText,\n              { tag: 'span', truncated: true, class: ns.be('node', 'label') },\n              () => [node.label]\n            ),\n          ])\n    }\n  },\n})\n</script>\n", "// @ts-nocheck\nimport { inject, provide } from 'vue'\nimport type Node from '../model/node'\n\ninterface NodeMap {\n  treeNodeExpand(node: Node): void\n  children: NodeMap[]\n}\n\nexport function useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject<NodeMap>('TreeNodeMap', null)\n  const currentNodeMap: NodeMap = {\n    treeNodeExpand: (node) => {\n      if (props.node !== node) {\n        props.node.collapse()\n      }\n    },\n    children: [],\n  }\n\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap)\n  }\n\n  provide('TreeNodeMap', currentNodeMap)\n\n  return {\n    broadcastExpanded: (node: Node): void => {\n      if (!props.accordion) return\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node)\n      }\n    },\n  }\n}\n", "// @ts-nocheck\nimport { provide, ref } from 'vue'\nimport { addClass, isFunction, removeClass } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { InjectionKey } from 'vue'\nimport type Node from './node'\nimport type { NodeDropType } from '../tree.type'\n\ninterface TreeNode {\n  node: Node\n  $el?: HTMLElement\n}\n\ninterface DragOptions {\n  event: DragEvent\n  treeNode: TreeNode\n}\n\nexport interface DragEvents {\n  treeNodeDragStart: (options: DragOptions) => void\n  treeNodeDragOver: (options: DragOptions) => void\n  treeNodeDragEnd: (event: DragEvent) => void\n}\n\nexport const dragEventsKey: InjectionKey<DragEvents> = Symbol('dragEvents')\n\nexport function useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {\n  const ns = useNamespace('tree')\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null,\n  })\n\n  const treeNodeDragStart = ({ event, treeNode }: DragOptions) => {\n    if (isFunction(props.allowDrag) && !props.allowDrag(treeNode.node)) {\n      event.preventDefault()\n      return false\n    }\n    event.dataTransfer.effectAllowed = 'move'\n\n    // wrap in try catch to address IE's error when first param is 'text/plain'\n    try {\n      // setData is required for draggable to work in FireFox\n      // the content has to be '' so dragging a node out of the tree won't open a new tab in FireFox\n      event.dataTransfer.setData('text/plain', '')\n    } catch {}\n    dragState.value.draggingNode = treeNode\n    ctx.emit('node-drag-start', treeNode.node, event)\n  }\n\n  const treeNodeDragOver = ({ event, treeNode }: DragOptions) => {\n    const dropNode = treeNode\n    const oldDropNode = dragState.value.dropNode\n    if (oldDropNode && oldDropNode.node.id !== dropNode.node.id) {\n      removeClass(oldDropNode.$el, ns.is('drop-inner'))\n    }\n    const draggingNode = dragState.value.draggingNode\n    if (!draggingNode || !dropNode) return\n\n    let dropPrev = true\n    let dropInner = true\n    let dropNext = true\n    let userAllowDropInner = true\n    if (isFunction(props.allowDrop)) {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, 'prev')\n      userAllowDropInner = dropInner = props.allowDrop(\n        draggingNode.node,\n        dropNode.node,\n        'inner'\n      )\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, 'next')\n    }\n    event.dataTransfer.dropEffect =\n      dropInner || dropPrev || dropNext ? 'move' : 'none'\n    if (\n      (dropPrev || dropInner || dropNext) &&\n      oldDropNode?.node.id !== dropNode.node.id\n    ) {\n      if (oldDropNode) {\n        ctx.emit('node-drag-leave', draggingNode.node, oldDropNode.node, event)\n      }\n      ctx.emit('node-drag-enter', draggingNode.node, dropNode.node, event)\n    }\n\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode\n    } else {\n      // Reset dragState.value.dropNode to null when allowDrop is transfer from true to false.(For issue #14704)\n      dragState.value.dropNode = null\n    }\n\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false\n    }\n    if (\n      draggingNode.node === dropNode.node ||\n      draggingNode.node.contains(dropNode.node)\n    ) {\n      dropPrev = false\n      dropInner = false\n      dropNext = false\n    }\n\n    // find target node without children, just calc content node height\n    const targetPosition = dropNode.$el\n      .querySelector(`.${ns.be('node', 'content')}`)\n      .getBoundingClientRect()\n    const treePosition = el$.value.getBoundingClientRect()\n\n    let dropType: NodeDropType\n    const prevPercent = dropPrev ? (dropInner ? 0.25 : dropNext ? 0.45 : 1) : -1\n    const nextPercent = dropNext ? (dropInner ? 0.75 : dropPrev ? 0.55 : 0) : 1\n\n    let indicatorTop = -9999\n    const distance = event.clientY - targetPosition.top\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = 'before'\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = 'after'\n    } else if (dropInner) {\n      dropType = 'inner'\n    } else {\n      dropType = 'none'\n    }\n\n    const iconPosition = dropNode.$el\n      .querySelector(`.${ns.be('node', 'expand-icon')}`)\n      .getBoundingClientRect()\n    const dropIndicator = dropIndicator$.value\n    if (dropType === 'before') {\n      indicatorTop = iconPosition.top - treePosition.top\n    } else if (dropType === 'after') {\n      indicatorTop = iconPosition.bottom - treePosition.top\n    }\n    dropIndicator.style.top = `${indicatorTop}px`\n    dropIndicator.style.left = `${iconPosition.right - treePosition.left}px`\n\n    if (dropType === 'inner') {\n      addClass(dropNode.$el, ns.is('drop-inner'))\n    } else {\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n    }\n\n    dragState.value.showDropIndicator =\n      dropType === 'before' || dropType === 'after'\n    dragState.value.allowDrop =\n      dragState.value.showDropIndicator || userAllowDropInner\n    dragState.value.dropType = dropType\n    ctx.emit('node-drag-over', draggingNode.node, dropNode.node, event)\n  }\n\n  const treeNodeDragEnd = (event: DragEvent) => {\n    const { draggingNode, dropType, dropNode } = dragState.value\n    event.preventDefault()\n\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1911486\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    if (draggingNode && dropNode) {\n      const draggingNodeCopy = { data: draggingNode.node.data }\n      if (dropType !== 'none') {\n        draggingNode.node.remove()\n      }\n      if (dropType === 'before') {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'after') {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'inner') {\n        dropNode.node.insertChild(draggingNodeCopy)\n      }\n      if (dropType !== 'none') {\n        store.value.registerNode(draggingNodeCopy)\n        if (store.value.key) {\n          //restore checkbox state after dragging\n          draggingNode.node.eachNode((node) => {\n            store.value.nodesMap[node.data[store.value.key]]?.setChecked(\n              node.checked,\n              !store.value.checkStrictly\n            )\n          })\n        }\n      }\n\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n\n      ctx.emit(\n        'node-drag-end',\n        draggingNode.node,\n        dropNode.node,\n        dropType,\n        event\n      )\n      if (dropType !== 'none') {\n        ctx.emit('node-drop', draggingNode.node, dropNode.node, dropType, event)\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit('node-drag-end', draggingNode.node, null, dropType, event)\n    }\n\n    dragState.value.showDropIndicator = false\n    dragState.value.draggingNode = null\n    dragState.value.dropNode = null\n    dragState.value.allowDrop = true\n  }\n\n  provide(dragEventsKey, {\n    treeNodeDragStart,\n    treeNodeDragOver,\n    treeNodeDragEnd,\n  })\n\n  return {\n    dragState,\n  }\n}\n", "<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n        @click.stop\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { debugWarn, isFunction, isString } from '@element-plus/utils'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil, handleCurrentChange } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { RootTreeType, TreeNodeData, TreeOptionProps } from './tree.type'\nimport type { CheckboxValueType } from '@element-plus/components/checkbox'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')!\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>()\n    const oldIndeterminate = ref<boolean>()\n    const node$ = ref<HTMLElement>()\n    const dragEvents = inject(dragEventsKey)!\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data?.[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.childNodes.length,\n      () => props.node.reInitChecked()\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      handleCurrentChange(tree.store, tree.ctx.emit, () => {\n        const nodeKeyProp = tree?.props?.nodeKey\n        if (nodeKeyProp) {\n          const curNodeKey = getNodeKey(props.node)\n          tree.store.value.setCurrentNodeKey(curNodeKey)\n        } else {\n          tree.store.value.setCurrentNode(props.node)\n        }\n      })\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (\n        (tree.props.checkOnClickNode ||\n          (props.node.isLeaf &&\n            tree.props.checkOnClickLeaf &&\n            props.showCheckbox)) &&\n        !props.node.disabled\n      ) {\n        handleCheckChange(!props.node.checked)\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props?.['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand(() => {\n          ctx.emit('node-expand', props.node.data, props.node, instance)\n        })\n      }\n    }\n\n    const handleCheckChange = (value: CheckboxValueType) => {\n      props.node.setChecked(value as boolean, !tree?.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n", "// @ts-nocheck\nimport { onMounted, onUpdated } from 'vue'\nimport { useEventListener } from '@vueuse/core'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport type TreeStore from './tree-store'\n\nimport type { Ref } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\n\ninterface UseKeydownOption {\n  el$: Ref<HTMLElement>\n}\nexport function useKeydown({ el$ }: UseKeydownOption, store: Ref<TreeStore>) {\n  const ns = useNamespace('tree')\n\n  onMounted(() => {\n    initTabIndex()\n  })\n\n  onUpdated(() => {\n    const checkboxItems = Array.from(\n      el$.value.querySelectorAll('input[type=checkbox]')\n    )\n    checkboxItems.forEach((checkbox) => {\n      checkbox.setAttribute('tabindex', '-1')\n    })\n  })\n\n  const handleKeydown = (ev: KeyboardEvent): void => {\n    const currentItem = ev.target as HTMLElement\n    if (!currentItem.className.includes(ns.b('node'))) return\n    const code = ev.code\n    const treeItems = Array.from(\n      el$.value.querySelectorAll(`.${ns.is('focusable')}[role=treeitem]`)\n    )\n    const currentIndex = treeItems.indexOf(currentItem)\n    let nextIndex\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      ev.preventDefault()\n      if (code === EVENT_CODE.up) {\n        nextIndex =\n          currentIndex === -1\n            ? 0\n            : currentIndex !== 0\n            ? currentIndex - 1\n            : treeItems.length - 1\n        const startIndex = nextIndex\n        while (true) {\n          if (store.value.getNode(treeItems[nextIndex].dataset.key).canFocus)\n            break\n          nextIndex--\n          if (nextIndex === startIndex) {\n            nextIndex = -1\n            break\n          }\n          if (nextIndex < 0) {\n            nextIndex = treeItems.length - 1\n          }\n        }\n      } else {\n        nextIndex =\n          currentIndex === -1\n            ? 0\n            : currentIndex < treeItems.length - 1\n            ? currentIndex + 1\n            : 0\n        const startIndex = nextIndex\n        while (true) {\n          if (store.value.getNode(treeItems[nextIndex].dataset.key).canFocus)\n            break\n          nextIndex++\n          if (nextIndex === startIndex) {\n            nextIndex = -1\n            break\n          }\n          if (nextIndex >= treeItems.length) {\n            nextIndex = 0\n          }\n        }\n      }\n      nextIndex !== -1 && treeItems[nextIndex].focus()\n    }\n    if ([EVENT_CODE.left, EVENT_CODE.right].includes(code)) {\n      ev.preventDefault()\n      currentItem.click()\n    }\n    const hasInput = currentItem.querySelector(\n      '[type=\"checkbox\"]'\n    ) as Nullable<HTMLInputElement>\n    if (\n      [EVENT_CODE.enter, EVENT_CODE.numpadEnter, EVENT_CODE.space].includes(\n        code\n      ) &&\n      hasInput\n    ) {\n      ev.preventDefault()\n      hasInput.click()\n    }\n  }\n\n  useEventListener(el$, 'keydown', handleKeydown)\n\n  const initTabIndex = (): void => {\n    const treeItems = Array.from(\n      el$.value.querySelectorAll(`.${ns.is('focusable')}[role=treeitem]`)\n    )\n    const checkboxItems = Array.from(\n      el$.value.querySelectorAll('input[type=checkbox]')\n    )\n    checkboxItems.forEach((checkbox) => {\n      checkbox.setAttribute('tabindex', '-1')\n    })\n    const checkedItem = el$.value.querySelectorAll(\n      `.${ns.is('checked')}[role=treeitem]`\n    )\n    if (checkedItem.length) {\n      checkedItem[0].setAttribute('tabindex', '0')\n      return\n    }\n    treeItems[0]?.setAttribute('tabindex', '0')\n  }\n}\n", "<template>\n  <div\n    ref=\"el$\"\n    :class=\"[\n      ns.b(),\n      ns.is('dragging', !!dragState.draggingNode),\n      ns.is('drop-not-allow', !dragState.allowDrop),\n      ns.is('drop-inner', dragState.dropType === 'inner'),\n      { [ns.m('highlight-current')]: highlightCurrent },\n    ]\"\n    role=\"tree\"\n  >\n    <el-tree-node\n      v-for=\"child in root.childNodes\"\n      :key=\"getNodeKey(child)\"\n      :node=\"child\"\n      :props=\"props\"\n      :accordion=\"accordion\"\n      :render-after-expand=\"renderAfterExpand\"\n      :show-checkbox=\"showCheckbox\"\n      :render-content=\"renderContent\"\n      @node-expand=\"handleNodeExpand\"\n    />\n    <div v-if=\"isEmpty\" :class=\"ns.e('empty-block')\">\n      <slot name=\"empty\">\n        <span :class=\"ns.e('empty-text')\">\n          {{ emptyText ?? t('el.tree.emptyText') }}\n        </span>\n      </slot>\n    </div>\n    <div\n      v-show=\"dragState.showDropIndicator\"\n      ref=\"dropIndicator$\"\n      :class=\"ns.e('drop-indicator')\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { iconPropType } from '@element-plus/utils'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { formItemContextKey } from '@element-plus/components/form'\nimport { selectKey } from '@element-plus/components/select/src/token'\nimport TreeStore from './model/tree-store'\nimport { getNodeKey as getNodeKeyUtil, handleCurrentChange } from './model/util'\nimport ElTreeNode from './tree-node.vue'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { useDragNodeHandler } from './model/useDragNode'\nimport { useKeydown } from './model/useKeydown'\nimport type Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  TreeComponentProps,\n  TreeData,\n  TreeKey,\n  TreeNodeData,\n} from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTree',\n  components: { ElTreeNode },\n  props: {\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    emptyText: {\n      type: String,\n    },\n    renderAfterExpand: {\n      type: Boolean,\n      default: true,\n    },\n    nodeKey: String,\n    checkStrictly: Boolean,\n    defaultExpandAll: Boolean,\n    expandOnClickNode: {\n      type: Boolean,\n      default: true,\n    },\n    checkOnClickNode: Boolean,\n    checkOnClickLeaf: {\n      type: Boolean,\n      default: true,\n    },\n    checkDescendants: {\n      type: Boolean,\n      default: false,\n    },\n    autoExpandParent: {\n      type: Boolean,\n      default: true,\n    },\n    defaultCheckedKeys: Array as PropType<\n      TreeComponentProps['defaultCheckedKeys']\n    >,\n    defaultExpandedKeys: Array as PropType<\n      TreeComponentProps['defaultExpandedKeys']\n    >,\n    currentNodeKey: [String, Number] as PropType<string | number>,\n    renderContent: Function,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n    draggable: {\n      type: Boolean,\n      default: false,\n    },\n    allowDrag: Function,\n    allowDrop: Function,\n    props: {\n      type: Object as PropType<TreeComponentProps['props']>,\n      default: () => ({\n        children: 'children',\n        label: 'label',\n        disabled: 'disabled',\n      }),\n    },\n    lazy: {\n      type: Boolean,\n      default: false,\n    },\n    highlightCurrent: Boolean,\n    load: Function as PropType<TreeComponentProps['load']>,\n    filterNodeMethod: Function as PropType<\n      TreeComponentProps['filterNodeMethod']\n    >,\n    accordion: Boolean,\n    indent: {\n      type: Number,\n      default: 18,\n    },\n    icon: {\n      type: iconPropType,\n    },\n  },\n  emits: [\n    'check-change',\n    'current-change',\n    'node-click',\n    'node-contextmenu',\n    'node-collapse',\n    'node-expand',\n    'check',\n    'node-drag-start',\n    'node-drag-end',\n    'node-drop',\n    'node-drag-leave',\n    'node-drag-enter',\n    'node-drag-over',\n  ],\n  setup(props, ctx) {\n    const { t } = useLocale()\n    const ns = useNamespace('tree')\n    const selectInfo = inject(selectKey, null)\n\n    const store = ref<TreeStore>(\n      new TreeStore({\n        key: props.nodeKey,\n        data: props.data,\n        lazy: props.lazy,\n        props: props.props,\n        load: props.load,\n        currentNodeKey: props.currentNodeKey,\n        checkStrictly: props.checkStrictly,\n        checkDescendants: props.checkDescendants,\n        defaultCheckedKeys: props.defaultCheckedKeys,\n        defaultExpandedKeys: props.defaultExpandedKeys,\n        autoExpandParent: props.autoExpandParent,\n        defaultExpandAll: props.defaultExpandAll,\n        filterNodeMethod: props.filterNodeMethod,\n      })\n    )\n\n    store.value.initialize()\n\n    const root = ref<Node>(store.value.root)\n    const currentNode = ref<Node>(null)\n    const el$ = ref<Nullable<HTMLElement>>(null)\n    const dropIndicator$ = ref<Nullable<HTMLElement>>(null)\n\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n\n    const { dragState } = useDragNodeHandler({\n      props,\n      ctx,\n      el$,\n      dropIndicator$,\n      store,\n    })\n\n    useKeydown({ el$ }, store)\n\n    const isEmpty = computed(() => {\n      const { childNodes } = root.value\n      const hasFilteredOptions = selectInfo\n        ? selectInfo.hasFilteredOptions !== 0\n        : false\n      return (\n        (!childNodes ||\n          childNodes.length === 0 ||\n          childNodes.every(({ visible }) => !visible)) &&\n        !hasFilteredOptions\n      )\n    })\n\n    watch(\n      () => props.currentNodeKey,\n      (newVal) => {\n        store.value.setCurrentNodeKey(newVal)\n      }\n    )\n\n    watch(\n      () => props.defaultCheckedKeys,\n      (newVal) => {\n        store.value.setDefaultCheckedKey(newVal)\n      }\n    )\n\n    watch(\n      () => props.defaultExpandedKeys,\n      (newVal) => {\n        store.value.setDefaultExpandedKeys(newVal)\n      }\n    )\n\n    watch(\n      () => props.data,\n      (newVal) => {\n        store.value.setData(newVal)\n      },\n      { deep: true }\n    )\n\n    watch(\n      () => props.checkStrictly,\n      (newVal) => {\n        store.value.checkStrictly = newVal\n      }\n    )\n\n    const filter = (value) => {\n      if (!props.filterNodeMethod)\n        throw new Error('[Tree] filterNodeMethod is required when filter')\n      store.value.filter(value)\n    }\n\n    const getNodeKey = (node: Node) => {\n      return getNodeKeyUtil(props.nodeKey, node.data)\n    }\n\n    const getNodePath = (data: TreeKey | TreeNodeData) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in getNodePath')\n      const node = store.value.getNode(data)\n      if (!node) return []\n      const path = [node.data]\n      let parent = node.parent\n      while (parent && parent !== root.value) {\n        path.push(parent.data)\n        parent = parent.parent\n      }\n      return path.reverse()\n    }\n\n    const getCheckedNodes = (\n      leafOnly?: boolean,\n      includeHalfChecked?: boolean\n    ): TreeNodeData[] => {\n      return store.value.getCheckedNodes(leafOnly, includeHalfChecked)\n    }\n\n    const getCheckedKeys = (leafOnly?: boolean): TreeKey[] => {\n      return store.value.getCheckedKeys(leafOnly)\n    }\n\n    const getCurrentNode = (): TreeNodeData => {\n      const currentNode = store.value.getCurrentNode()\n      return currentNode ? currentNode.data : null\n    }\n\n    const getCurrentKey = (): any => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in getCurrentKey')\n      const currentNode = getCurrentNode()\n      return currentNode ? currentNode[props.nodeKey] : null\n    }\n\n    const setCheckedNodes = (nodes: Node[], leafOnly?: boolean) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCheckedNodes')\n      store.value.setCheckedNodes(nodes, leafOnly)\n    }\n\n    const setCheckedKeys = (keys: TreeKey[], leafOnly?: boolean) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCheckedKeys')\n      store.value.setCheckedKeys(keys, leafOnly)\n    }\n\n    const setChecked = (\n      data: TreeKey | TreeNodeData,\n      checked: boolean,\n      deep: boolean\n    ) => {\n      store.value.setChecked(data, checked, deep)\n    }\n\n    const getHalfCheckedNodes = (): TreeNodeData[] => {\n      return store.value.getHalfCheckedNodes()\n    }\n\n    const getHalfCheckedKeys = (): TreeKey[] => {\n      return store.value.getHalfCheckedKeys()\n    }\n\n    const setCurrentNode = (node: Node, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCurrentNode')\n\n      handleCurrentChange(store, ctx.emit, () => {\n        broadcastExpanded(node)\n        store.value.setUserCurrentNode(node, shouldAutoExpandParent)\n      })\n    }\n\n    const setCurrentKey = (key?: TreeKey, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCurrentKey')\n\n      handleCurrentChange(store, ctx.emit, () => {\n        broadcastExpanded()\n        store.value.setCurrentNodeKey(key, shouldAutoExpandParent)\n      })\n    }\n\n    const getNode = (data: TreeKey | TreeNodeData): Node => {\n      return store.value.getNode(data)\n    }\n\n    const remove = (data: TreeNodeData | Node) => {\n      store.value.remove(data)\n    }\n\n    const append = (\n      data: TreeNodeData,\n      parentNode: TreeNodeData | TreeKey | Node\n    ) => {\n      store.value.append(data, parentNode)\n    }\n\n    const insertBefore = (\n      data: TreeNodeData,\n      refNode: TreeKey | TreeNodeData | Node\n    ) => {\n      store.value.insertBefore(data, refNode)\n    }\n\n    const insertAfter = (\n      data: TreeNodeData,\n      refNode: TreeKey | TreeNodeData | Node\n    ) => {\n      store.value.insertAfter(data, refNode)\n    }\n\n    const handleNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const updateKeyChildren = (key: TreeKey, data: TreeData) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in updateKeyChild')\n      store.value.updateChildren(key, data)\n    }\n\n    provide('RootTree', {\n      ctx,\n      props,\n      store,\n      root,\n      currentNode,\n      instance: getCurrentInstance(),\n    } as any)\n\n    provide(formItemContextKey, undefined)\n\n    return {\n      ns,\n      // ref\n      store,\n      root,\n      currentNode,\n      dragState,\n      el$,\n      dropIndicator$,\n\n      // computed\n      isEmpty,\n\n      // methods\n      filter,\n      getNodeKey,\n      getNodePath,\n      getCheckedNodes,\n      getCheckedKeys,\n      getCurrentNode,\n      getCurrentKey,\n      setCheckedNodes,\n      setCheckedKeys,\n      setChecked,\n      getHalfCheckedNodes,\n      getHalfCheckedKeys,\n      setCurrentNode,\n      setCurrentKey,\n      t,\n      getNode,\n      remove,\n      append,\n      insertBefore,\n      insertAfter,\n      handleNodeExpand,\n      updateKeyChildren,\n    }\n  },\n})\n</script>\n", "import { withInstall } from '@element-plus/utils'\nimport Tree from './src/tree.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElTree: SFCWithInstall<typeof Tree> = withInstall(Tree)\n\nexport default ElTree\n\nexport * from './src/tree.type'\nexport * from './src/instance'\n", "// @ts-nocheck\nimport { computed, nextTick, toRefs, watch } from 'vue'\nimport { pick } from 'lodash-unified'\nimport ElSelect from '@element-plus/components/select'\nimport { useNamespace } from '@element-plus/hooks'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport type { Ref } from 'vue'\nimport type ElTree from '@element-plus/components/tree'\n\nexport const useSelect = (\n  props,\n  { attrs, emit },\n  {\n    select,\n    tree,\n    key,\n  }: {\n    select: Ref<InstanceType<typeof ElSelect> | undefined>\n    tree: Ref<InstanceType<typeof ElTree> | undefined>\n    key: Ref<string>\n  }\n) => {\n  const ns = useNamespace('tree-select')\n\n  // update tree data when use filterMethod/remoteMethod\n  watch(\n    () => props.data,\n    () => {\n      if (props.filterable) {\n        nextTick(() => {\n          // let tree node expand only, same with tree filter\n          tree.value?.filter(select.value?.states.inputValue)\n        })\n      }\n    },\n    { flush: 'post' }\n  )\n\n  const result = {\n    ...pick(toRefs(props), Object.keys(ElSelect.props)),\n    ...attrs,\n    class: computed(() => attrs.class),\n    style: computed(() => attrs.style),\n    // attrs is not reactive, when v-model binding source changes,\n    // this listener is still old, see the bug(or test 'v-model source change'):\n    // https://github.com/element-plus/element-plus/issues/14204\n    'onUpdate:modelValue': (value) => emit(UPDATE_MODEL_EVENT, value),\n    valueKey: key,\n    popperClass: computed(() => {\n      const classes = [ns.e('popper')]\n      if (props.popperClass) classes.push(props.popperClass)\n      return classes.join(' ')\n    }),\n    filterMethod: (keyword = '') => {\n      if (props.filterMethod) {\n        props.filterMethod(keyword)\n      } else if (props.remoteMethod) {\n        props.remoteMethod(keyword)\n      } else {\n        // let tree node expand only, same with tree filter\n        tree.value?.filter(keyword)\n      }\n    },\n  }\n\n  return result\n}\n", "import { defineComponent, getCurrentInstance, nextTick, watch } from 'vue'\nimport { ElOption } from '@element-plus/components/select'\n\nconst component = defineComponent({\n  extends: ElOption,\n  setup(props, ctx) {\n    const result = (ElOption.setup as NonNullable<any>)(props, ctx)\n\n    // use methods.selectOptionClick\n    delete result.selectOptionClick\n\n    const vm = (getCurrentInstance() as NonNullable<any>).proxy\n\n    // Fix: https://github.com/element-plus/element-plus/issues/7917\n    // `el-option` will delete the cache before unmount,\n    // This is normal for flat arrays `<el-select><el-option v-for=\"3\"></el-select>`,\n    // Because the same node key does not create a difference node,\n    // But in tree data, the same key at different levels will create diff nodes,\n    // So the destruction of `el-option` in `nextTick` will be slower than\n    // the creation of new `el-option`, which will delete the new node,\n    // here restore the deleted node.\n    // @link https://github.com/element-plus/element-plus/blob/6df6e49db07b38d6cc3b5e9a960782bd30879c11/packages/components/select/src/option.vue#L78\n    nextTick(() => {\n      if (!result.select.states.cachedOptions.get(vm.value)) {\n        result.select.onOptionCreate(vm)\n      }\n    })\n\n    watch(\n      () => ctx.attrs.visible,\n      (val) => {\n        nextTick(() => {\n          result.states.visible = val\n        })\n      },\n      {\n        immediate: true,\n      }\n    )\n\n    return result\n  },\n  methods: {\n    selectOptionClick() {\n      // $el.parentElement => el-tree-node__content\n      this.$el.parentElement.click()\n    },\n  },\n})\n\nexport default component\n", "import { isArray } from '@element-plus/utils'\n\nimport type { TreeNodeData } from '@element-plus/components/tree/src/tree.type'\n\nexport function isValidValue(val: any) {\n  return val || val === 0\n}\n\nexport function isValidArray(val: any) {\n  return isArray(val) && val.length\n}\n\nexport function toValidArray(val: any) {\n  return isArray(val) ? val : isValidValue(val) ? [val] : []\n}\n\ntype TreeCallback<T extends TreeNodeData, R> = (\n  data: T,\n  index: number,\n  array: T[],\n  parent?: T\n) => R\n\ntype TreeFindCallback<T extends TreeNodeData> = TreeCallback<T, boolean>\n\nexport function treeFind<T extends TreeNodeData>(\n  treeData: T[],\n  findCallback: TreeFindCallback<T>,\n  getChildren: (data: T) => T[]\n): T | undefined\nexport function treeFind<T extends TreeNodeData, R>(\n  treeData: T[],\n  findCallback: TreeFindCallback<T>,\n  getChildren: (data: T) => T[],\n  resultCallback?: TreeCallback<T, R>,\n  parent?: T\n): R | undefined\nexport function treeFind<T extends TreeNodeData, R>(\n  treeData: T[],\n  findCallback: TreeFindCallback<T>,\n  getChildren: (data: T) => T[],\n  resultCallback?: TreeCallback<T, R>,\n  parent?: T\n): T | R | undefined {\n  for (let i = 0; i < treeData.length; i++) {\n    const data = treeData[i]\n    if (findCallback(data, i, treeData, parent)) {\n      return resultCallback ? resultCallback(data, i, treeData, parent) : data\n    } else {\n      const children = getChildren(data)\n      if (isValidArray(children)) {\n        const find = treeFind(\n          children,\n          findCallback,\n          getChildren,\n          resultCallback,\n          data\n        )\n        if (find) return find\n      }\n    }\n  }\n}\n\nexport function treeEach<T extends TreeNodeData>(\n  treeData: T[],\n  callback: TreeCallback<T, void>,\n  getChildren: (data: T) => T[],\n  parent?: T\n) {\n  for (let i = 0; i < treeData.length; i++) {\n    const data = treeData[i]\n    callback(data, i, treeData, parent)\n\n    const children = getChildren(data)\n    if (isValidArray(children)) {\n      treeEach(children, callback, getChildren, data)\n    }\n  }\n}\n", "// @ts-nocheck\nimport { computed, nextTick, toRefs, watch } from 'vue'\nimport { isEqual, isNil, pick } from 'lodash-unified'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { escapeStringRegexp, isEmpty, isFunction } from '@element-plus/utils'\nimport ElTree from '@element-plus/components/tree'\nimport TreeSelectOption from './tree-select-option'\nimport {\n  isValidArray,\n  isValidValue,\n  toValidArray,\n  treeEach,\n  treeFind,\n} from './utils'\nimport type { CacheOption } from './cache-options'\nimport type { Ref } from 'vue'\nimport type ElSelect from '@element-plus/components/select'\nimport type Node from '@element-plus/components/tree/src/model/node'\nimport type { TreeNodeData } from '@element-plus/components/tree/src/tree.type'\nimport type { TreeInstance } from '@element-plus/components/tree'\n\nexport const useTree = (\n  props,\n  { attrs, slots, emit },\n  {\n    select,\n    tree,\n    key,\n  }: {\n    select: Ref<InstanceType<typeof ElSelect> | undefined>\n    tree: Ref<TreeInstance | undefined>\n    key: Ref<string>\n  }\n) => {\n  watch(\n    () => props.modelValue,\n    () => {\n      if (props.showCheckbox) {\n        nextTick(() => {\n          const treeInstance = tree.value\n          if (\n            treeInstance &&\n            !isEqual(\n              treeInstance.getCheckedKeys(),\n              toValidArray(props.modelValue)\n            )\n          ) {\n            treeInstance.setCheckedKeys(toValidArray(props.modelValue))\n          }\n        })\n      }\n    },\n    {\n      immediate: true,\n      deep: true,\n    }\n  )\n\n  const propsMap = computed(() => ({\n    value: key.value,\n    label: 'label',\n    children: 'children',\n    disabled: 'disabled',\n    isLeaf: 'isLeaf',\n    ...props.props,\n  }))\n\n  const getNodeValByProp = (\n    prop: 'value' | 'label' | 'children' | 'disabled' | 'isLeaf',\n    data: TreeNodeData\n  ) => {\n    const propVal = propsMap.value[prop]\n    if (isFunction(propVal)) {\n      return propVal(\n        data,\n        tree.value?.getNode(getNodeValByProp('value', data)) as Node\n      )\n    } else {\n      return data[propVal as string]\n    }\n  }\n\n  const defaultExpandedParentKeys = toValidArray(props.modelValue)\n    .map((value) => {\n      return treeFind(\n        props.data || [],\n        (data) => getNodeValByProp('value', data) === value,\n        (data) => getNodeValByProp('children', data),\n        (data, index, array, parent) =>\n          parent && getNodeValByProp('value', parent)\n      )\n    })\n    .filter((item) => isValidValue(item))\n\n  const cacheOptions = computed(() => {\n    if (!props.renderAfterExpand && !props.lazy) return []\n\n    const options: CacheOption[] = []\n\n    treeEach(\n      props.data.concat(props.cacheData),\n      (node) => {\n        const value = getNodeValByProp('value', node)\n        options.push({\n          value,\n          currentLabel: getNodeValByProp('label', node),\n          isDisabled: getNodeValByProp('disabled', node),\n        })\n      },\n      (data) => getNodeValByProp('children', data)\n    )\n\n    return options\n  })\n\n  const getChildCheckedKeys = () => {\n    return tree.value?.getCheckedKeys().filter((checkedKey) => {\n      const node = tree.value?.getNode(checkedKey) as Node\n      return !isNil(node) && isEmpty(node.childNodes)\n    })\n  }\n\n  return {\n    ...pick(toRefs(props), Object.keys(ElTree.props)),\n    ...attrs,\n    nodeKey: key,\n\n    // only expand on click node when the `check-strictly` is false\n    expandOnClickNode: computed(() => {\n      return !props.checkStrictly && props.expandOnClickNode\n    }),\n\n    // show current selected node only first time,\n    // fix the problem of expanding multiple nodes when checking multiple nodes\n    defaultExpandedKeys: computed(() => {\n      return props.defaultExpandedKeys\n        ? props.defaultExpandedKeys.concat(defaultExpandedParentKeys)\n        : defaultExpandedParentKeys\n    }),\n\n    renderContent: (h, { node, data, store }) => {\n      return h(\n        TreeSelectOption,\n        {\n          value: getNodeValByProp('value', data),\n          label: getNodeValByProp('label', data),\n          disabled: getNodeValByProp('disabled', data),\n          visible: node.visible,\n        },\n        props.renderContent\n          ? () => props.renderContent(h, { node, data, store })\n          : slots.default\n          ? () => slots.default({ node, data, store })\n          : undefined\n      )\n    },\n    filterNodeMethod: (value, data, node) => {\n      if (props.filterNodeMethod)\n        return props.filterNodeMethod(value, data, node)\n      if (!value) return true\n      const regexp = new RegExp(escapeStringRegexp(value), 'i')\n      return regexp.test(getNodeValByProp('label', data) || '')\n    },\n    onNodeClick: (data, node, e) => {\n      attrs.onNodeClick?.(data, node, e)\n\n      // `onCheck` is trigger when `checkOnClickNode`\n      if (props.showCheckbox && props.checkOnClickNode) return\n\n      // now `checkOnClickNode` is false, only no checkbox and `checkStrictly` or `isLeaf`\n      if (!props.showCheckbox && (props.checkStrictly || node.isLeaf)) {\n        if (!getNodeValByProp('disabled', data)) {\n          const option = select.value?.states.options.get(\n            getNodeValByProp('value', data)\n          )\n          select.value?.handleOptionSelect(option)\n        }\n      } else if (props.expandOnClickNode) {\n        e.proxy.handleExpandIconClick()\n      }\n      select.value?.focus()\n    },\n    onCheck: (data, params) => {\n      // ignore when no checkbox, like only `checkOnClickNode` is true\n      if (!props.showCheckbox) return\n\n      const dataValue = getNodeValByProp('value', data)\n      const dataMap = {}\n      treeEach(\n        [tree.value.store.root],\n        (node) => (dataMap[node.key] = node),\n        (node) => node.childNodes\n      )\n\n      // fix: checkedKeys has not cached keys\n      const uncachedCheckedKeys = params.checkedKeys\n      const cachedKeys = props.multiple\n        ? toValidArray(props.modelValue).filter(\n            (item) => !(item in dataMap) && !uncachedCheckedKeys.includes(item)\n          )\n        : []\n      const checkedKeys = cachedKeys.concat(uncachedCheckedKeys)\n\n      if (props.checkStrictly) {\n        emit(\n          UPDATE_MODEL_EVENT,\n          // Checking for changes may come from `check-on-node-click`\n          props.multiple\n            ? checkedKeys\n            : checkedKeys.includes(dataValue)\n            ? dataValue\n            : undefined\n        )\n      }\n      // only can select leaf node\n      else {\n        if (props.multiple) {\n          const childKeys = getChildCheckedKeys()\n\n          emit(UPDATE_MODEL_EVENT, cachedKeys.concat(childKeys))\n        } else {\n          // select first leaf node when check parent\n          const firstLeaf = treeFind(\n            [data],\n            (data) =>\n              !isValidArray(getNodeValByProp('children', data)) &&\n              !getNodeValByProp('disabled', data),\n            (data) => getNodeValByProp('children', data)\n          )\n          const firstLeafKey = firstLeaf\n            ? getNodeValByProp('value', firstLeaf)\n            : undefined\n\n          // unselect when any child checked\n          const hasCheckedChild =\n            isValidValue(props.modelValue) &&\n            !!treeFind(\n              [data],\n              (data) => getNodeValByProp('value', data) === props.modelValue,\n              (data) => getNodeValByProp('children', data)\n            )\n\n          emit(\n            UPDATE_MODEL_EVENT,\n            firstLeafKey === props.modelValue || hasCheckedChild\n              ? undefined\n              : firstLeafKey\n          )\n        }\n      }\n\n      nextTick(() => {\n        const checkedKeys = toValidArray(props.modelValue)\n        tree.value.setCheckedKeys(checkedKeys)\n\n        attrs.onCheck?.(data, {\n          checkedKeys: tree.value.getCheckedKeys(),\n          checkedNodes: tree.value.getCheckedNodes(),\n          halfCheckedKeys: tree.value.getHalfCheckedKeys(),\n          halfCheckedNodes: tree.value.getHalfCheckedNodes(),\n        })\n      })\n\n      select.value?.focus()\n    },\n\n    onNodeExpand: (data, node, e) => {\n      attrs.onNodeExpand?.(data, node, e)\n      nextTick(() => {\n        if (\n          !props.checkStrictly &&\n          props.lazy &&\n          props.multiple &&\n          node.checked\n        ) {\n          const dataMap = {}\n          const uncachedCheckedKeys = (\n            tree.value as TreeInstance\n          ).getCheckedKeys()\n\n          treeEach(\n            [tree.value.store.root],\n            (node) => (dataMap[node.key] = node),\n            (node) => node.childNodes\n          )\n\n          const cachedKeys = toValidArray(props.modelValue).filter(\n            (item) => !(item in dataMap) && !uncachedCheckedKeys.includes(item)\n          )\n\n          const childKeys = getChildCheckedKeys()\n          emit(UPDATE_MODEL_EVENT, cachedKeys.concat(childKeys))\n        }\n      })\n    },\n    // else\n    cacheOptions,\n  }\n}\n", "import { defineComponent, inject, watch } from 'vue'\nimport { selectKey } from '@element-plus/components/select'\nimport { isClient } from '@element-plus/utils'\nimport type { SelectContext } from '@element-plus/components/select'\nimport type { PropType } from 'vue'\n\n// same as el-option instance,\n// these are required for `cachedOptions`\nexport type CacheOption = {\n  value: string | number | boolean | object\n  currentLabel: string | number\n  isDisabled: boolean\n}\n\nexport default defineComponent({\n  props: {\n    data: {\n      type: Array as PropType<CacheOption[]>,\n      default: () => [],\n    },\n  },\n  setup(props) {\n    const select = inject(selectKey) as NonNullable<SelectContext>\n\n    watch(\n      () => props.data,\n      () => {\n        props.data.forEach((item) => {\n          if (!select.states.cachedOptions.has(item.value)) {\n            // TODO: the type of 'item' is not compatible with the type of 'cachedOptions',\n            // which may indicate potential runtime issues.\n            // @ts-expect-error\n            select.states.cachedOptions.set(item.value, item)\n          }\n        })\n\n        // fork from packages/select/src/useSelect.ts#330\n        const inputs = select.selectRef?.querySelectorAll('input') || []\n        if (\n          isClient &&\n          !Array.from(inputs).includes(\n            document.activeElement as HTMLInputElement\n          )\n        ) {\n          select.setSelected()\n        }\n      },\n      { flush: 'post', immediate: true }\n    )\n\n    return () => undefined\n  },\n})\n", "<script lang=\"ts\">\n// @ts-nocheck\nimport { computed, defineComponent, h, onMounted, reactive, ref } from 'vue'\nimport { pick } from 'lodash-unified'\nimport ElSelect from '@element-plus/components/select'\nimport ElTree from '@element-plus/components/tree'\nimport { useSelect } from './select'\nimport { useTree } from './tree'\nimport CacheOptions from './cache-options'\n\nexport default defineComponent({\n  name: 'ElTreeSelect',\n  // disable `ElSelect` inherit current attrs\n  inheritAttrs: false,\n  props: {\n    ...ElSelect.props,\n    ...ElTree.props,\n    /**\n     * @description The cached data of the lazy node, the structure is the same as the data, used to get the label of the unloaded data\n     */\n    cacheData: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  setup(props, context) {\n    const { slots, expose } = context\n\n    const select = ref<InstanceType<typeof ElSelect>>()\n    const tree = ref<InstanceType<typeof ElTree>>()\n\n    const key = computed(() => props.nodeKey || props.valueKey || 'value')\n\n    const selectProps = useSelect(props, context, { select, tree, key })\n    const { cacheOptions, ...treeProps } = useTree(props, context, {\n      select,\n      tree,\n      key,\n    })\n\n    // expose ElTree/ElSelect methods\n    const methods = reactive({})\n    expose(methods)\n    onMounted(() => {\n      Object.assign(methods, {\n        ...pick(tree.value, [\n          'filter',\n          'updateKeyChildren',\n          'getCheckedNodes',\n          'setCheckedNodes',\n          'getCheckedKeys',\n          'setCheckedKeys',\n          'setChecked',\n          'getHalfCheckedNodes',\n          'getHalfCheckedKeys',\n          'getCurrentKey',\n          'getCurrentNode',\n          'setCurrentKey',\n          'setCurrentNode',\n          'getNode',\n          'remove',\n          'append',\n          'insertBefore',\n          'insertAfter',\n        ]),\n        ...pick(select.value, ['focus', 'blur', 'selectedLabel']),\n      })\n    })\n\n    return () =>\n      h(\n        ElSelect,\n        /**\n         * 1. The `props` is processed into `Refs`, but `v-bind` and\n         * render function props cannot read `Refs`, so use `reactive`\n         * unwrap the `Refs` and keep reactive.\n         * 2. The keyword `ref` requires `Ref`, but `reactive` broke it,\n         * so use function.\n         */\n        reactive({\n          ...selectProps,\n          ref: (ref) => (select.value = ref),\n        }),\n        {\n          ...slots,\n          default: () => [\n            h(CacheOptions, { data: cacheOptions.value }),\n            h(\n              ElTree,\n              reactive({\n                ...treeProps,\n                ref: (ref) => (tree.value = ref),\n              })\n            ),\n          ],\n        }\n      )\n  },\n})\n</script>\n", "import { withInstall } from '@element-plus/utils'\nimport TreeSelect from './src/tree-select.vue'\n\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElTreeSelect: SFCWithInstall<typeof TreeSelect> =\n  withInstall(TreeSelect)\n\nexport default ElTreeSelect\n"],
  "mappings": "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",
  "names": ["ensureArray", "_createElementBlock", "_normalizeClass", "_withModifiers", "_renderSlot", "_createElementVNode", "_toDisplayString", "_vShow", "_sfc_main", "_sfc_render", "_openBlock", "_createElementBlock", "_normalizeClass", "_normalizeStyle", "_renderSlot", "_createCommentVNode", "debounce", "ensureArray", "lodashDebounce", "COMPONENT_NAME", "_sfc_main", "ElOption", "_sfc_render", "_resolveComponent", "_createVNode", "_withCtx", "_createElementVNode", "_normalizeClass", "_withModifiers", "_openBlock", "_createElementBlock", "_renderSlot", "_createCommentVNode", "_Fragment", "_renderList", "_createTextVNode", "_toDisplayString", "_createBlock", "_withKeys", "_vModelText", "_resolveDynamicComponent", "_withDirectives", "_vShow", "_sfc_main", "ensureArray", "children", "_sfc_render", "_withDirectives", "_openBlock", "_createElementBlock", "_normalizeClass", "_toDisplayString", "_createElementVNode", "_renderSlot", "_vShow", "ref", "_sfc_main", "_sfc_main", "getNodeKey", "getNodeKeyUtil", "_sfc_render", "_resolveComponent", "_withDirectives", "_openBlock", "_createElementBlock", "_normalizeClass", "_withModifiers", "_createElementVNode", "_normalizeStyle", "_createBlock", "_withCtx", "_resolveDynamicComponent", "_createCommentVNode", "_createVNode", "_Fragment", "_renderList", "_vShow", "_sfc_main", "isEmpty", "getNodeKey", "getNodeKeyUtil", "currentNode", "_sfc_render", "_resolveComponent", "_openBlock", "_createElementBlock", "_normalizeClass", "_Fragment", "_renderList", "_createBlock", "_renderSlot", "_createElementVNode", "_toDisplayString", "_createCommentVNode", "_withDirectives", "_vShow", "useSelect", "h", "TreeSelectOption", "_sfc_main", "useSelect"]
}
