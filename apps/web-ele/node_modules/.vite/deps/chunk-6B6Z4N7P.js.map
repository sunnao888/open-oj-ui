{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tag/src/tag.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tag/src/tag.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/tag/index.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/hooks/use-calc-input-width/index.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/utils/strings.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/utils/raf.ts"],
  "sourcesContent": ["import { buildProps } from '@element-plus/utils'\nimport { componentSizes } from '@element-plus/constants'\nimport type Tag from './tag.vue'\n\nimport type { ExtractPropTypes } from 'vue'\n\nexport const tagProps = buildProps({\n  /**\n   * @description type of Tag\n   */\n  type: {\n    type: String,\n    values: ['primary', 'success', 'info', 'warning', 'danger'],\n    default: 'primary',\n  },\n  /**\n   * @description whether Tag can be removed\n   */\n  closable: Boolean,\n  /**\n   * @description whether to disable animations\n   */\n  disableTransitions: Boolean,\n  /**\n   * @description whether Tag has a highlighted border\n   */\n  hit: Boolean,\n  /**\n   * @description background color of the Tag\n   */\n  color: String,\n  /**\n   * @description size of Tag\n   */\n  size: {\n    type: String,\n    values: componentSizes,\n  },\n  /**\n   * @description theme of Tag\n   */\n  effect: {\n    type: String,\n    values: ['dark', 'light', 'plain'],\n    default: 'light',\n  },\n  /**\n   * @description whether Tag is rounded\n   */\n  round: Boolean,\n} as const)\nexport type TagProps = ExtractPropTypes<typeof tagProps>\n\nexport const tagEmits = {\n  close: (evt: MouseEvent) => evt instanceof MouseEvent,\n  click: (evt: MouseEvent) => evt instanceof MouseEvent,\n}\nexport type TagEmits = typeof tagEmits\n\nexport type TagInstance = InstanceType<typeof Tag> & unknown\n", "<template>\n  <span\n    v-if=\"disableTransitions\"\n    :class=\"containerKls\"\n    :style=\"{ backgroundColor: color }\"\n    @click=\"handleClick\"\n  >\n    <span :class=\"ns.e('content')\">\n      <slot />\n    </span>\n    <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click.stop=\"handleClose\">\n      <Close />\n    </el-icon>\n  </span>\n  <transition\n    v-else\n    :name=\"`${ns.namespace.value}-zoom-in-center`\"\n    appear\n    @vue:mounted=\"handleVNodeMounted\"\n  >\n    <span\n      :class=\"containerKls\"\n      :style=\"{ backgroundColor: color }\"\n      @click=\"handleClick\"\n    >\n      <span :class=\"ns.e('content')\">\n        <slot />\n      </span>\n      <el-icon v-if=\"closable\" :class=\"ns.e('close')\" @click.stop=\"handleClose\">\n        <Close />\n      </el-icon>\n    </span>\n  </transition>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { Close } from '@element-plus/icons-vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormSize } from '@element-plus/components/form'\n\nimport { tagEmits, tagProps } from './tag'\nimport type { VNode } from 'vue'\n\ndefineOptions({\n  name: 'ElTag',\n})\nconst props = defineProps(tagProps)\nconst emit = defineEmits(tagEmits)\n\nconst tagSize = useFormSize()\nconst ns = useNamespace('tag')\nconst containerKls = computed(() => {\n  const { type, hit, effect, closable, round } = props\n  return [\n    ns.b(),\n    ns.is('closable', closable),\n    ns.m(type || 'primary'),\n    ns.m(tagSize.value),\n    ns.m(effect),\n    ns.is('hit', hit),\n    ns.is('round', round),\n  ]\n})\n\n// methods\nconst handleClose = (event: MouseEvent) => {\n  emit('close', event)\n}\n\nconst handleClick = (event: MouseEvent) => {\n  emit('click', event)\n}\n\nconst handleVNodeMounted = (vnode: VNode) => {\n  // @ts-ignore\n  if (vnode?.component?.subTree?.component?.bum) {\n    // @ts-ignore\n    vnode.component.subTree.component.bum = null\n  }\n}\n</script>\n", "import { withInstall } from '@element-plus/utils'\n\nimport Tag from './src/tag.vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElTag: SFCWithInstall<typeof Tag> = withInstall(Tag)\nexport default ElTag\n\nexport * from './src/tag'\n", "import { computed, ref, shallowRef } from 'vue'\nimport { useResizeObserver } from '@vueuse/core'\n\nexport function useCalcInputWidth() {\n  const calculatorRef = shallowRef<HTMLElement>()\n  const calculatorWidth = ref(0)\n  const MINIMUM_INPUT_WIDTH = 11\n\n  const inputStyle = computed(() => ({\n    minWidth: `${Math.max(calculatorWidth.value, MINIMUM_INPUT_WIDTH)}px`,\n  }))\n\n  const resetCalculatorWidth = () => {\n    calculatorWidth.value =\n      calculatorRef.value?.getBoundingClientRect().width ?? 0\n  }\n\n  useResizeObserver(calculatorRef, resetCalculatorWidth)\n\n  return {\n    calculatorRef,\n    calculatorWidth,\n    inputStyle,\n  }\n}\n", "import { camelize, hyphenate, capitalize as toCapitalize } from '@vue/shared'\n\nexport { camelize, hyphenate }\nexport const kebabCase = hyphenate\n\n/**\n * fork from {@link https://github.com/sindresorhus/escape-string-regexp}\n */\nexport const escapeStringRegexp = (string = '') =>\n  string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d')\n\n// NOTE: improve capitalize types. Restore previous code after the [PR](https://github.com/vuejs/core/pull/6212) merge\nexport const capitalize = <T extends string>(str: T) =>\n  toCapitalize(str) as Capitalize<T>\n", "import { isClient } from './browser'\n\nexport const rAF = (fn: () => void) =>\n  isClient\n    ? window.requestAnimationFrame(fn)\n    : (setTimeout(fn, 16) as unknown as number)\n\nexport const cAF = (handle: number) =>\n  isClient ? window.cancelAnimationFrame(handle) : clearTimeout(handle)\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEY,IAAC,WAAW,WAAW;EACjC,MAAM;IACJ,MAAM;IACN,QAAQ,CAAC,WAAW,WAAW,QAAQ,WAAW,QAAQ;IAC1D,SAAS;EACb;EACE,UAAU;EACV,oBAAoB;EACpB,KAAK;EACL,OAAO;EACP,MAAM;IACJ,MAAM;IACN,QAAQ;EACZ;EACE,QAAQ;IACN,MAAM;IACN,QAAQ,CAAC,QAAQ,SAAS,OAAO;IACjC,SAAS;EACb;EACE,OAAO;AACT,CAAC;AACW,IAAC,WAAW;EACtB,OAAO,CAAC,QAAQ,eAAe;EAC/B,OAAO,CAAC,QAAQ,eAAe;AACjC;;;kCCmBc;EACZ,MAAM;AACR,CAAA;;;;;;;AAIA,UAAM,UAAU,YAAY;AACtB,UAAA,KAAK,aAAa,KAAK;AACvB,UAAA,eAAe,SAAS,MAAM;AAClC,YAAM,EAAE,MAAM,KAAK,QAAQ,UAAU,MAAA,IAAU;AACxC,aAAA;QACL,GAAG,EAAE;QACL,GAAG,GAAG,YAAY,QAAQ;QAC1B,GAAG,EAAE,QAAQ,SAAS;QACtB,GAAG,EAAE,QAAQ,KAAK;QAClB,GAAG,EAAE,MAAM;QACX,GAAG,GAAG,OAAO,GAAG;QAChB,GAAG,GAAG,SAAS,KAAK;MAAA;IACtB,CACD;AAGK,UAAA,cAAc,CAAC,UAAsB;AACzC,WAAK,SAAS,KAAK;IAAA;AAGf,UAAA,cAAc,CAAC,UAAsB;AACzC,WAAK,SAAS,KAAK;IAAA;AAGf,UAAA,qBAAqB,CAAC,UAAiB;AAE3C,UAAI,IAAO,IAAA;AAEH,WAAA,MAAA,MAAA,KAAkB,SAAA,OAAgB,SAAA,MAAA,cAAA,OAAA,SAAA,GAAA,YAAA,OAAA,SAAA,GAAA,cAAA,OAAA,SAAA,GAAA,KAAA;AAC1C,cAAA,UAAA,QAAA,UAAA,MAAA;MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EU,IAAC,QAAQ,YAAY,GAAG;;;ACA7B,SAAS,oBAAoB;AAClC,QAAM,gBAAgB,WAAU;AAChC,QAAM,kBAAkB,IAAI,CAAC;AAC7B,QAAM,sBAAsB;AAC5B,QAAM,aAAa,SAAS,OAAO;IACjC,UAAU,GAAG,KAAK,IAAI,gBAAgB,OAAO,mBAAmB,CAAC;EACrE,EAAI;AACF,QAAM,uBAAuB,MAAM;AACjC,QAAI,IAAI;AACR,oBAAgB,SAAS,MAAM,KAAK,cAAc,UAAU,OAAO,SAAS,GAAG,sBAAqB,EAAG,UAAU,OAAO,KAAK;EACjI;AACE,oBAAkB,eAAe,oBAAoB;AACrD,SAAO;IACL;IACA;IACA;EACJ;AACA;A;;;;AChBY,IAAC,qBAAqB,CAAC,SAAS,OAAO,OAAO,QAAQ,uBAAuB,MAAM,EAAE,QAAQ,MAAM,OAAO;AAC1G,IAACA,cAAa,CAAC,QAAQC,WAAa,GAAG;;;ACHvC,IAAC,MAAM,CAAC,OAAO,WAAW,OAAO,sBAAsB,EAAE,IAAI,WAAW,IAAI,EAAE;AAC9E,IAAC,MAAM,CAAC,WAAW,WAAW,OAAO,qBAAqB,MAAM,IAAI,aAAa,MAAM;",
  "names": ["capitalize", "toCapitalize"]
}
