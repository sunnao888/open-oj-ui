{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/hooks/use-id/index.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/form/src/hooks/use-form-item.ts"],
  "sourcesContent": ["import { getCurrentInstance, inject, unref } from 'vue'\nimport { type MaybeRef, computedEager } from '@vueuse/core'\nimport { debugWarn, isClient } from '@element-plus/utils'\nimport { useGetDerivedNamespace } from '../use-namespace'\n\nimport type { InjectionKey, Ref } from 'vue'\n\nexport type ElIdInjectionContext = {\n  prefix: number\n  current: number\n}\n\nconst defaultIdInjection = {\n  prefix: Math.floor(Math.random() * 10000),\n  current: 0,\n}\n\nexport const ID_INJECTION_KEY: InjectionKey<ElIdInjectionContext> =\n  Symbol('elIdInjection')\n\nexport const useIdInjection = (): ElIdInjectionContext => {\n  return getCurrentInstance()\n    ? inject(ID_INJECTION_KEY, defaultIdInjection)\n    : defaultIdInjection\n}\n\nexport const useId = (deterministicId?: MaybeRef<string>): Ref<string> => {\n  const idInjection = useIdInjection()\n  if (!isClient && idInjection === defaultIdInjection) {\n    debugWarn(\n      'IdInjection',\n      `Looks like you are using server rendering, you must provide a id provider to ensure the hydration process to be succeed\nusage: app.provide(ID_INJECTION_KEY, {\n  prefix: number,\n  current: number,\n})`\n    )\n  }\n\n  const namespace = useGetDerivedNamespace()\n\n  // NOTE: Here we use `computedEager` to calculate the id value immediately, avoiding inconsistent id generation due to the lazy feature of `computed` when server rendering.\n  const idRef = computedEager(\n    () =>\n      unref(deterministicId) ||\n      `${namespace.value}-id-${idInjection.prefix}-${idInjection.current++}`\n  )\n\n  return idRef\n}\n", "import {\n  computed,\n  inject,\n  onMounted,\n  onUnmounted,\n  ref,\n  toRef,\n  watch,\n} from 'vue'\nimport { useId } from '@element-plus/hooks'\nimport { formContextKey, formItemContextKey } from '../constants'\n\nimport type { ComputedRef, Ref, WatchStopHandle } from 'vue'\nimport type { FormItemContext } from '../types'\n\nexport const useFormItem = () => {\n  const form = inject(formContextKey, undefined)\n  const formItem = inject(formItemContextKey, undefined)\n  return {\n    form,\n    formItem,\n  }\n}\n\nexport type IUseFormItemInputCommonProps = {\n  id?: string\n  label?: string | number | boolean | Record<string, any>\n  ariaLabel?: string | number | boolean | Record<string, any>\n}\n\nexport const useFormItemInputId = (\n  props: Partial<IUseFormItemInputCommonProps>,\n  {\n    formItemContext,\n    disableIdGeneration,\n    disableIdManagement,\n  }: {\n    formItemContext?: FormItemContext\n    disableIdGeneration?: ComputedRef<boolean> | Ref<boolean>\n    disableIdManagement?: ComputedRef<boolean> | Ref<boolean>\n  }\n) => {\n  if (!disableIdGeneration) {\n    disableIdGeneration = ref<boolean>(false)\n  }\n  if (!disableIdManagement) {\n    disableIdManagement = ref<boolean>(false)\n  }\n\n  const inputId = ref<string>()\n  let idUnwatch: WatchStopHandle | undefined = undefined\n\n  const isLabeledByFormItem = computed<boolean>(() => {\n    return !!(\n      !(props.label || props.ariaLabel) &&\n      formItemContext &&\n      formItemContext.inputIds &&\n      formItemContext.inputIds?.length <= 1\n    )\n  })\n\n  // Generate id for ElFormItem label if not provided as prop\n  onMounted(() => {\n    idUnwatch = watch(\n      [toRef(props, 'id'), disableIdGeneration] as any,\n      ([id, disableIdGeneration]: [string, boolean]) => {\n        const newId = id ?? (!disableIdGeneration ? useId().value : undefined)\n        if (newId !== inputId.value) {\n          if (formItemContext?.removeInputId) {\n            inputId.value && formItemContext.removeInputId(inputId.value)\n            if (!disableIdManagement?.value && !disableIdGeneration && newId) {\n              formItemContext.addInputId(newId)\n            }\n          }\n          inputId.value = newId\n        }\n      },\n      { immediate: true }\n    )\n  })\n\n  onUnmounted(() => {\n    idUnwatch && idUnwatch()\n    if (formItemContext?.removeInputId) {\n      inputId.value && formItemContext.removeInputId(inputId.value)\n    }\n  })\n\n  return {\n    isLabeledByFormItem,\n    inputId,\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAM,qBAAqB;EACzB,QAAQ,KAAK,MAAM,KAAK,OAAM,IAAK,GAAG;EACtC,SAAS;AACX;AACY,IAAC,mBAAmB,OAAO,eAAe;AAC1C,IAAC,iBAAiB,MAAM;AAClC,SAAO,mBAAkB,IAAK,OAAO,kBAAkB,kBAAkB,IAAI;AAC/E;AACY,IAAC,QAAQ,CAAC,oBAAoB;AACxC,QAAM,cAAc,eAAc;AAClC,MAAI,CAAC,YAAY,gBAAgB,oBAAoB;AACnD,cAAU,eAAe;;;;GAI1B;EACH;AACE,QAAM,YAAY,uBAAsB;AACxC,QAAM,QAAQ,cAAc,MAAM,MAAM,eAAe,KAAK,GAAG,UAAU,KAAK,OAAO,YAAY,MAAM,IAAI,YAAY,SAAS,EAAE;AAClI,SAAO;AACT;;;ACbY,IAAC,cAAc,MAAM;AAC/B,QAAM,OAAO,OAAO,gBAAgB,MAAM;AAC1C,QAAM,WAAW,OAAO,oBAAoB,MAAM;AAClD,SAAO;IACL;IACA;EACJ;AACA;AACY,IAAC,qBAAqB,CAAC,OAAO;EACxC;EACA;EACA;AACF,MAAM;AACJ,MAAI,CAAC,qBAAqB;AACxB,0BAAsB,IAAI,KAAK;EACnC;AACE,MAAI,CAAC,qBAAqB;AACxB,0BAAsB,IAAI,KAAK;EACnC;AACE,QAAM,UAAU,IAAG;AACnB,MAAI,YAAY;AAChB,QAAM,sBAAsB,SAAS,MAAM;AACzC,QAAI;AACJ,WAAO,CAAC,EAAE,EAAE,MAAM,SAAS,MAAM,cAAc,mBAAmB,gBAAgB,cAAc,KAAK,gBAAgB,aAAa,OAAO,SAAS,GAAG,WAAW;EACpK,CAAG;AACD,YAAU,MAAM;AACd,gBAAY,MAAM,CAAC,MAAM,OAAO,IAAI,GAAG,mBAAmB,GAAG,CAAC,CAAC,IAAI,oBAAoB,MAAM;AAC3F,YAAM,QAAQ,MAAM,OAAO,KAAK,CAAC,uBAAuB,MAAK,EAAG,QAAQ;AACxE,UAAI,UAAU,QAAQ,OAAO;AAC3B,YAAI,mBAAmB,OAAO,SAAS,gBAAgB,eAAe;AACpE,kBAAQ,SAAS,gBAAgB,cAAc,QAAQ,KAAK;AAC5D,cAAI,EAAE,uBAAuB,OAAO,SAAS,oBAAoB,UAAU,CAAC,wBAAwB,OAAO;AACzG,4BAAgB,WAAW,KAAK;UAC5C;QACA;AACQ,gBAAQ,QAAQ;MACxB;IACA,GAAO,EAAE,WAAW,KAAI,CAAE;EAC1B,CAAG;AACD,cAAY,MAAM;AAChB,iBAAa,UAAS;AACtB,QAAI,mBAAmB,OAAO,SAAS,gBAAgB,eAAe;AACpE,cAAQ,SAAS,gBAAgB,cAAc,QAAQ,KAAK;IAClE;EACA,CAAG;AACD,SAAO;IACL;IACA;EACJ;AACA;",
  "names": []
}
