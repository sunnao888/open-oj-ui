{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/utils/vue/validator.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/switch/src/switch.ts", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/switch/src/switch.vue", "../../../../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/packages/components/switch/index.ts"],
  "sourcesContent": ["import { componentSizes, datePickTypes } from '@element-plus/constants'\nimport type { ComponentSize, DatePickType } from '@element-plus/constants'\n\nexport const isValidComponentSize = (val: string): val is ComponentSize | '' =>\n  ['', ...componentSizes].includes(val)\n\nexport const isValidDatePickType = (val: string): val is DatePickType =>\n  ([...datePickTypes] as string[]).includes(val)\n", "import {\n  buildProps,\n  definePropType,\n  iconPropType,\n  isBoolean,\n  isNumber,\n  isString,\n  isValidComponentSize,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useAriaProps } from '@element-plus/hooks'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type Switch from './switch.vue'\nimport type { ExtractPropTypes, PropType } from 'vue'\n\nexport const switchProps = buildProps({\n  /**\n   * @description binding value, it should be equivalent to either `active-value` or `inactive-value`, by default it's `boolean` type\n   */\n  modelValue: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  /**\n   * @description whether Switch is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description whether Switch is in loading state\n   */\n  loading: Boolean,\n  /**\n   * @description size of Switch\n   */\n  size: {\n    type: String as PropType<ComponentSize>,\n    validator: isValidComponentSize,\n  },\n  /**\n   * @description width of Switch\n   */\n  width: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description whether icon or text is displayed inside dot, only the first character will be rendered for text\n   */\n  inlinePrompt: Boolean,\n  /**\n   * @description component of the icon displayed in action when in `off` state\n   */\n  inactiveActionIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description component of the icon displayed in action when in `on` state\n   */\n  activeActionIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description component of the icon displayed when in `on` state, overrides `active-text`\n   */\n  activeIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description component of the icon displayed when in `off` state, overrides `inactive-text`\n   */\n  inactiveIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description text displayed when in `on` state\n   */\n  activeText: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description text displayed when in `off` state\n   */\n  inactiveText: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description switch value when in `on` state\n   */\n  activeValue: {\n    type: [Boolean, String, Number],\n    default: true,\n  },\n  /**\n   * @description switch value when in `off` state\n   */\n  inactiveValue: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  /**\n   * @description input name of Switch\n   */\n  name: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description before-change hook before the switch state changes. If `false` is returned or a `Promise` is returned and then is rejected, will stop switching\n   */\n  beforeChange: {\n    type: definePropType<() => Promise<boolean> | boolean>(Function),\n  },\n  /**\n   * @description id for input\n   */\n  id: String,\n  /**\n   * @description tabindex for input\n   */\n  tabindex: {\n    type: [String, Number],\n  },\n  ...useAriaProps(['ariaLabel']),\n} as const)\n\nexport type SwitchProps = ExtractPropTypes<typeof switchProps>\n\nexport const switchEmits = {\n  [UPDATE_MODEL_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n  [CHANGE_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n  [INPUT_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n}\nexport type SwitchEmits = typeof switchEmits\n\nexport type SwitchInstance = InstanceType<typeof Switch> & unknown\n", "<template>\n  <div :class=\"switchKls\" @click.prevent=\"switchValue\">\n    <input\n      :id=\"inputId\"\n      ref=\"input\"\n      :class=\"ns.e('input')\"\n      type=\"checkbox\"\n      role=\"switch\"\n      :aria-checked=\"checked\"\n      :aria-disabled=\"switchDisabled\"\n      :aria-label=\"ariaLabel\"\n      :name=\"name\"\n      :true-value=\"activeValue\"\n      :false-value=\"inactiveValue\"\n      :disabled=\"switchDisabled\"\n      :tabindex=\"tabindex\"\n      @change=\"handleChange\"\n      @keydown.enter=\"switchValue\"\n    />\n    <span\n      v-if=\"!inlinePrompt && (inactiveIcon || inactiveText)\"\n      :class=\"labelLeftKls\"\n    >\n      <el-icon v-if=\"inactiveIcon\">\n        <component :is=\"inactiveIcon\" />\n      </el-icon>\n      <span v-if=\"!inactiveIcon && inactiveText\" :aria-hidden=\"checked\">{{\n        inactiveText\n      }}</span>\n    </span>\n    <span ref=\"core\" :class=\"ns.e('core')\" :style=\"coreStyle\">\n      <div v-if=\"inlinePrompt\" :class=\"ns.e('inner')\">\n        <template v-if=\"activeIcon || inactiveIcon\">\n          <el-icon :class=\"ns.is('icon')\">\n            <component :is=\"checked ? activeIcon : inactiveIcon\" />\n          </el-icon>\n        </template>\n        <template v-else-if=\"activeText || inactiveText\">\n          <span :class=\"ns.is('text')\" :aria-hidden=\"!checked\">\n            {{ checked ? activeText : inactiveText }}\n          </span>\n        </template>\n      </div>\n      <div :class=\"ns.e('action')\">\n        <el-icon v-if=\"loading\" :class=\"ns.is('loading')\">\n          <loading />\n        </el-icon>\n        <slot v-else-if=\"checked\" name=\"active-action\">\n          <el-icon v-if=\"activeActionIcon\">\n            <component :is=\"activeActionIcon\" />\n          </el-icon>\n        </slot>\n        <slot v-else-if=\"!checked\" name=\"inactive-action\">\n          <el-icon v-if=\"inactiveActionIcon\">\n            <component :is=\"inactiveActionIcon\" />\n          </el-icon>\n        </slot>\n      </div>\n    </span>\n    <span\n      v-if=\"!inlinePrompt && (activeIcon || activeText)\"\n      :class=\"labelRightKls\"\n    >\n      <el-icon v-if=\"activeIcon\">\n        <component :is=\"activeIcon\" />\n      </el-icon>\n      <span v-if=\"!activeIcon && activeText\" :aria-hidden=\"!checked\">{{\n        activeText\n      }}</span>\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, onMounted, ref, watch } from 'vue'\nimport {\n  addUnit,\n  debugWarn,\n  isBoolean,\n  isPromise,\n  throwError,\n} from '@element-plus/utils'\nimport ElIcon from '@element-plus/components/icon'\nimport {\n  useFormDisabled,\n  useFormItem,\n  useFormItemInputId,\n  useFormSize,\n} from '@element-plus/components/form'\nimport { Loading } from '@element-plus/icons-vue'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { switchEmits, switchProps } from './switch'\nimport type { CSSProperties } from 'vue'\n\nconst COMPONENT_NAME = 'ElSwitch'\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(switchProps)\nconst emit = defineEmits(switchEmits)\n\nconst { formItem } = useFormItem()\nconst switchSize = useFormSize()\nconst ns = useNamespace('switch')\n\nconst { inputId } = useFormItemInputId(props, {\n  formItemContext: formItem,\n})\n\nconst switchDisabled = useFormDisabled(computed(() => props.loading))\nconst isControlled = ref(props.modelValue !== false)\nconst input = ref<HTMLInputElement>()\nconst core = ref<HTMLSpanElement>()\n\nconst switchKls = computed(() => [\n  ns.b(),\n  ns.m(switchSize.value),\n  ns.is('disabled', switchDisabled.value),\n  ns.is('checked', checked.value),\n])\n\nconst labelLeftKls = computed(() => [\n  ns.e('label'),\n  ns.em('label', 'left'),\n  ns.is('active', !checked.value),\n])\n\nconst labelRightKls = computed(() => [\n  ns.e('label'),\n  ns.em('label', 'right'),\n  ns.is('active', checked.value),\n])\n\nconst coreStyle = computed<CSSProperties>(() => ({\n  width: addUnit(props.width),\n}))\n\nwatch(\n  () => props.modelValue,\n  () => {\n    isControlled.value = true\n  }\n)\n\nconst actualValue = computed(() => {\n  return isControlled.value ? props.modelValue : false\n})\n\nconst checked = computed(() => actualValue.value === props.activeValue)\n\nif (![props.activeValue, props.inactiveValue].includes(actualValue.value)) {\n  emit(UPDATE_MODEL_EVENT, props.inactiveValue)\n  emit(CHANGE_EVENT, props.inactiveValue)\n  emit(INPUT_EVENT, props.inactiveValue)\n}\n\nwatch(checked, (val) => {\n  input.value!.checked = val\n\n  if (props.validateEvent) {\n    formItem?.validate?.('change').catch((err) => debugWarn(err))\n  }\n})\n\nconst handleChange = () => {\n  const val = checked.value ? props.inactiveValue : props.activeValue\n  emit(UPDATE_MODEL_EVENT, val)\n  emit(CHANGE_EVENT, val)\n  emit(INPUT_EVENT, val)\n  nextTick(() => {\n    input.value!.checked = checked.value\n  })\n}\n\nconst switchValue = () => {\n  if (switchDisabled.value) return\n\n  const { beforeChange } = props\n  if (!beforeChange) {\n    handleChange()\n    return\n  }\n\n  const shouldChange = beforeChange()\n\n  const isPromiseOrBool = [\n    isPromise(shouldChange),\n    isBoolean(shouldChange),\n  ].includes(true)\n  if (!isPromiseOrBool) {\n    throwError(\n      COMPONENT_NAME,\n      'beforeChange must return type `Promise<boolean>` or `boolean`'\n    )\n  }\n\n  if (isPromise(shouldChange)) {\n    shouldChange\n      .then((result) => {\n        if (result) {\n          handleChange()\n        }\n      })\n      .catch((e) => {\n        debugWarn(COMPONENT_NAME, `some error occurred: ${e}`)\n      })\n  } else if (shouldChange) {\n    handleChange()\n  }\n}\n\nconst focus = (): void => {\n  input.value?.focus?.()\n}\n\nonMounted(() => {\n  input.value!.checked = checked.value\n})\n\ndefineExpose({\n  /**\n   *  @description manual focus to the switch component\n   **/\n  focus,\n  /**\n   * @description whether Switch is checked\n   */\n  checked,\n})\n</script>\n", "import { withInstall } from '@element-plus/utils'\nimport Switch from './src/switch.vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nexport const ElSwitch: SFCWithInstall<typeof Switch> = withInstall(Switch)\nexport default ElSwitch\n\nexport * from './src/switch'\n"],
  "mappings": "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",
  "names": ["_openBlock", "_createElementBlock", "_normalizeClass", "_unref", "_withModifiers", "_createElementVNode"]
}
