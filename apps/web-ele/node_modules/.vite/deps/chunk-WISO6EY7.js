import {
  isNil_default
} from "./chunk-VQA6AZPL.js";
import {
  init_shared_esm_bundler,
  isArray,
  isObject,
  isString
} from "./chunk-CMAVT37G.js";

// ../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/node_modules/element-plus/es/constants/size.mjs
var componentSizes = ["", "default", "small", "large"];
var componentSizeMap = {
  large: 40,
  default: 32,
  small: 24
};

// ../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/node_modules/element-plus/es/utils/types.mjs
init_shared_esm_bundler();
init_shared_esm_bundler();
var isUndefined = (val) => val === void 0;
var isBoolean = (val) => typeof val === "boolean";
var isNumber = (val) => typeof val === "number";
var isEmpty = (val) => !val && val !== 0 || isArray(val) && val.length === 0 || isObject(val) && !Object.keys(val).length;
var isElement = (e) => {
  if (typeof Element === "undefined")
    return false;
  return e instanceof Element;
};
var isPropAbsent = (prop) => isNil_default(prop);
var isStringNumber = (val) => {
  if (!isString(val)) {
    return false;
  }
  return !Number.isNaN(Number(val));
};
var isWindow = (val) => val === window;

// ../../node_modules/.pnpm/element-plus@2.9.9_vue@3.5.13_typescript@5.8.3_/node_modules/element-plus/es/utils/error.mjs
init_shared_esm_bundler();
var ElementPlusError = class extends Error {
  constructor(m) {
    super(m);
    this.name = "ElementPlusError";
  }
};
function throwError(scope, m) {
  throw new ElementPlusError(`[${scope}] ${m}`);
}
function debugWarn(scope, message) {
  if (true) {
    const error = isString(scope) ? new ElementPlusError(`[${scope}] ${message}`) : scope;
    console.warn(error);
  }
}

export {
  isUndefined,
  isBoolean,
  isNumber,
  isEmpty,
  isElement,
  isPropAbsent,
  isStringNumber,
  isWindow,
  throwError,
  debugWarn,
  componentSizes,
  componentSizeMap
};
//# sourceMappingURL=chunk-WISO6EY7.js.map
